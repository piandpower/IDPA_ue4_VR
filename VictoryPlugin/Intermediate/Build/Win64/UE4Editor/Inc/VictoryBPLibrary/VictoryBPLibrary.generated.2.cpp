// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Private/VictoryBPLibraryPrivatePCH.h"
#include "VictoryBPLibrary.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode2VictoryBPLibrary() {}
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FMargin();
	SLATE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnchors();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FBox();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UInstancedStaticMeshComponent_NoRegister();
	INPUTCORE_API class UScriptStruct* Z_Construct_UScriptStruct_FKey();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	ENGINE_API class UClass* Z_Construct_UClass_ASceneCapture2D_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearColor();
	ENGINE_API class UClass* Z_Construct_UClass_USceneCaptureComponent2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AStaticMeshActor_NoRegister();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_ESearchCase();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FPlane();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureRenderTarget2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInterface_NoRegister();
	UMG_API class UClass* Z_Construct_UClass_UUserWidget_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerStart_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundWave_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	UMG_API class UClass* Z_Construct_UClass_UWidget_NoRegister();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_ESearchDir();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FKeyEvent();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EComponentMobility();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundAttenuation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAudioComponent_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttachLocation();
	ENGINE_API class UClass* Z_Construct_UClass_APostProcessVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FDateTime();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathFollowingRequestResult();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationQueryFilter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APawn_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDestructibleComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundClass_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreaming_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInputEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSubtitleCue();
	ENGINE_API class UClass* Z_Construct_UClass_USoundBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();

	VICTORYBPLIBRARY_API class UEnum* Z_Construct_UEnum_VictoryBPLibrary_ESpeedUnit();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_AreLineSegmentsCrossing();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ClosestPointOnLineSeqment();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ClosestPointOnSphereToLine();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ClosestPointsOfLineSegments();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ClosestPointsOnTwoLines();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ConvertAnchorToAnchor();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ConvertPhysicsLinearVelocity();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_GetConsoleVariableFloat();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_GetConsoleVariableInt();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_GetVelocityAtPoint();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_GridSnap();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_IsEvenNumber();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_IsLineInsideSphere();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_IsMultipleOf();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_IsPointInsideBox();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_IsPowerOfTwo();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_LineExtentBoxIntersection();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_LineToLineIntersection();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_NegateFloat();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_NegateInt();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_NegateVector2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_PointOnWhichSideOfLineSegment();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ProjectPointOnLine();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_RoundToLowerMultiple();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_RoundToNearestMultiple();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_RoundToUpperMultiple();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_SetCenterOfMassOffset();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_SetVectorLength();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_SignedDistancePlanePoint();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_SphereBoxIntersection();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_VectorDegreesToRadians();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_VectorRadiansToDegrees();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UTKMathFunctionLibrary_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UTKMathFunctionLibrary();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_AVictoryISM_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_AVictoryISM();
	VICTORYBPLIBRARY_API class UEnum* Z_Construct_UEnum_VictoryBPLibrary_EJoyGraphicsFullScreen();
	VICTORYBPLIBRARY_API class UEnum* Z_Construct_UEnum_VictoryBPLibrary_EVictoryHMDDevice();
	VICTORYBPLIBRARY_API class UEnum* Z_Construct_UEnum_VictoryBPLibrary_EJoyImageFormats();
	VICTORYBPLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FVictoryInputAxis();
	VICTORYBPLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FVictoryInput();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Accessor__GetCharacterSkeletalMesh();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Accessor__GetNameAsString();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Accessor__GetPlayerController();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Actor__GetAttachedActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Actor__TeleportToActor();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_AddToActorRotation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_AnimatedVertex__GetAnimatedVertexLocations();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Animation__GetAimOffsets();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Animation__GetAimOffsetsFromRotation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_AppendMultiple();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Array_IsValidIndex();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Calcs__ClosestPointToSourcePoint();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Capture2D_Project();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Capture2D_SaveImage();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CaptureComponent2D_Project();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CaptureComponent2D_SaveImage();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Character__GetControllerRotation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CharacterMovement__SetMaxMoveSpeed();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_ClientWindow__GameWindowIsForeGroundInOS();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Clone__StaticMeshActor();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CompareMD5Hash();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_constructRand();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversion__FloatToRoundedInteger();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__ColorToString();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__RotatorToVector();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__StringToColor();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__StringToRotator();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__StringToVector();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__VectorToRotator();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CountOccurrancesOfSubString();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CreateMD5Hash();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CreateObject();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CreatePlane();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CreatePrimitiveComponent();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CreateTextureRenderTarget2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Data__GetCharacterBoneLocations();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_DistanceToSurface__DistaceOfPointToMeshSurface();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_DoesMaterialHaveParameter();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Draw__Thick3DLineBetweenActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Draw__Thick3DLineFromCharacterSocket();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Draw__Thick3DLineFromSocket();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_DrawCircle();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_EqualEqual_Vector2DVector2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_FileIO__SaveStringArrayToFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_FileIO__SaveStringTextToFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_FlashGameOnTaskBar();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetAllBoneNamesBelowBone();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetAllWidgetsOfClass();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetBoxContainingWorldPoints();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetClosestActorOfClassInRadiusOfActor();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetClosestActorOfClassInRadiusOfLocation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetCreationTime();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetDistanceBetweenComponentSurfaces();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetDistanceToCollision();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetFirstWidgetOfClass();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetGenericTeamId();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetHeadMountedDisplayDeviceType();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetNamesOfLoadedLevels();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetObjectPath();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetPlayerStart();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetPlayerUniqueNetID();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetSoundWaveFromFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetStaticMeshVertexLocations();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetTimeAlive();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetTimeInPlay();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetUserDisplayAdapterBrand();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetWidgetFromName();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GraphicsSettings__SetFrameRateCap();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GraphicsSettings__SetFrameRateToBeUnbound();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_HasSubstring();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_IsAlphaNumeric();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_IsPointOnPlane();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_IsStandAlone();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_IsWidgetOfClassInViewport();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_JoyFileIO_GetFiles();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_JoyFileIO_GetFilesInRootAndAllSubFolders();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_JoyGraphicsSettings__FullScreen_Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_JoyGraphicsSettings__FullScreen_Set();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_JoyIsKey();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_LensFlare__GetLensFlareOffsets();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_LoadObjectFromAssetPath();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_LoadStringArrayFromFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_LoadTexture2D_FromDDSFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_LoadTexture2D_FromFileByExtension();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Loops_ResetBPRunawayCounter();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_MapRangeClamped();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_MaxOfFloatArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_MaxOfIntArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_MinOfFloatArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_MinOfIntArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Mobility__SetSceneCompMobility();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_NotEqual_Vector2DVector2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Open_URL_In_Web_Browser();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_OperatingSystem__GetCurrentPlatform();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_OptionsMenu__GetDisplayAdapterScreenResolutions();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__EnterRagDoll();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__GetLocationofRagDoll();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__InitializeVictoryRagDoll();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__IsRagDoll();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__LeaveRagDoll();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__UpdateCharacterCameraToRagdollLocation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_PlayerController_GetControllerID();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_PlayerState_GetPlayerID();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_PlaySoundAtLocationFromFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_PlaySoundAttachedFromFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_PointDistanceToPlane();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_ProjectWorldToScreenPosition();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandBool_Bernoulli();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandBool_Bernoulli_MT();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandFloat_MINMAX_uniDis();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandFloat_MINMAX_uniDis_MT();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandFloat_uniDis();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandFloat_uniDis_MT();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandInt_MINMAX_uniDis();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandInt_MINMAX_uniDis_MT();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandInt_uniDis();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandInt_uniDis_MT();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RealWorldTime__GetCurrentOSTime();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RealWorldTime__GetDifferenceBetweenTimes();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RealWorldTime__GetTimePassedSincePreviousTime();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RemoveAllWidgetsOfClass();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Rendering__FreezeGameRendering();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Rendering__UnFreezeGameRendering();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SaveGameObject_GetAllSaveSlotFileNames();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_ScreenShots_Rename_Move_Most_Recent();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_seedRand();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_seedRandWithEntropy();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_seedRandWithTime();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Selection_SelectionBox();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_ServerTravel();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SetBloomIntensity();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SetComponentTickRate();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SetGenericTeamId();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SpawnActorIntoLevel();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_String__CombineStrings();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_String__CombineStrings_Multi();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_String__ExplodeString();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_StringConversion__GetFloatAsStringWithPrecision();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Text_IsNumeric();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Text_ToFloat();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Text_ToInt();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TraceData__GetTraceDataFromCharacterSocket();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TraceData__GetTraceDataFromSkeletalMeshSocket();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Traces__CharacterMeshTrace___ClosestBone();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Traces__CharacterMeshTrace___ClosestSocket();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TransformVectorToActorSpace();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TransformVectorToActorSpaceAngle();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_UTCToLocal();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Vector2DInterpTo();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Vector2DInterpTo_Constant();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_AI_MoveToWithFilter();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_Get_Pixel();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetGPUBrand();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetGPUInfo();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetGRHIAdapterName();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetPixelFromT2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetPixelsArrayFromT2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetStringFromOSClipboard();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_LoadTexture2D_FromFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_LoadTexture2D_FromFile_Pixels();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_SavePixels();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_SaveStringToOSClipboard();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_SecondsToHoursMinutesSeconds();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryAppendInline();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryCreateProc();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryDestructible_DestroyChunk();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryFloatMinusEquals();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryFloatPlusEquals();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetAllActionKeyBindings();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetAllAxisAndActionMappingsForKey();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetAllAxisKeyBindings();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetApplicationName();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Bool();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Color();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Float();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Int();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Rotator();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_String();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Vector();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Vector2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetSoundVolume();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetVictoryInput();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetVictoryInputAxis();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryIntMinusEquals();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryIntPlusEquals();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryIsApplicationRunning();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryISM_ConvertToVictoryISMActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryISM_GetAllVictoryISMActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryLoadLevelInstance();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__GameRootDirectory();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__LogsDir();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__SavedDir();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__ScreenShotsDir();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__Win64Dir_BinaryLocation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__WindowsNoEditorDir();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPhysics_UpdateAngularDamping();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryReBindActionKey();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryReBindAxisKey();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryRemoveActionKeyBind();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryRemoveAxisKeyBind();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Bool();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Color();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Float();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Int();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Rotator();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_String();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Vector();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Vector2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySimulateKeyPress();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySimulateMouseWheel();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySortFloatArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySortIntArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySoundVolumeChange();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__EnableWorldRendering();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__GetCenterOfViewport();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__GetMousePosition();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__SetMousePosition();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Visibility__GetNotRenderedActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Visibility__GetRenderedActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WidgetGetChildrenOfClass();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WidgetGetParentOfClass();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WidgetIsChildOf();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WorldType__InEditorWorld();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WorldType__InGameInstanceWorld();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WorldType__InPIEWorld();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryBPFunctionLibrary_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryBPFunctionLibrary();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPHTML_IsHTML();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPHTML_VictoryHTML5_SetCursorVisible();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryBPHTML_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryBPHTML();
	VICTORYBPLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FVictorySubtitleCue();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_AVictoryPC_OnVictorySubtitlesQueued();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_AVictoryPC_Subtitles_CPPDelegate();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_DataReceived();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_SendRequest();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPlaySpeechSound();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_AVictoryPC_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_AVictoryPC();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Remove();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryTMapComp_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryTMapComp();
	VICTORYBPLIBRARY_API class UPackage* Z_Construct_UPackage__Script_VictoryBPLibrary();
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_seedRand()
	{
		struct VictoryBPFunctionLibrary_eventseedRand_Parms
		{
			int32 seed;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("seedRand"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventseedRand_Parms));
			UProperty* NewProp_seed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("seed"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(seed, VictoryBPFunctionLibrary_eventseedRand_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Random"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Seed Rand with value passed\n@param seed - value to pass to the prng as the seed"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_seedRandWithEntropy()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("seedRandWithEntropy"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Random"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Seed Rand with entropy\n@param seed - value to pass to the prng as the seed"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_seedRandWithTime()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("seedRandWithTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Random"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Seed Rand with current time"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Selection_SelectionBox()
	{
		struct VictoryBPFunctionLibrary_eventSelection_SelectionBox_Parms
		{
			UObject* WorldContextObject;
			TArray<AActor*> SelectedActors;
			FVector2D AnchorPoint;
			FVector2D DraggedPoint;
			TSubclassOf<AActor>  ClassFilter;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Selection_SelectionBox"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventSelection_SelectionBox_Parms));
			UProperty* NewProp_ClassFilter = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ClassFilter"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(ClassFilter, VictoryBPFunctionLibrary_eventSelection_SelectionBox_Parms), 0x0014000000000080, Z_Construct_UClass_AActor_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_DraggedPoint = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DraggedPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DraggedPoint, VictoryBPFunctionLibrary_eventSelection_SelectionBox_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_AnchorPoint = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnchorPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AnchorPoint, VictoryBPFunctionLibrary_eventSelection_SelectionBox_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_SelectedActors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SelectedActors"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(SelectedActors, VictoryBPFunctionLibrary_eventSelection_SelectionBox_Parms), 0x0010000000000180);
			UProperty* NewProp_SelectedActors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SelectedActors, TEXT("SelectedActors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventSelection_SelectionBox_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Implementation of a Selection Marquee / Selection Box as a BP Node. AnchorPoint is the first clicked point, which user then drags from to make the box. Class filter is optional way to narrow the scope of actors that can be selected by the selection box! -Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_ServerTravel()
	{
		struct VictoryBPFunctionLibrary_eventServerTravel_Parms
		{
			UObject* WorldContextObject;
			FString MapName;
			bool bNotifyPlayers;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerTravel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventServerTravel_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNotifyPlayers, VictoryBPFunctionLibrary_eventServerTravel_Parms, bool);
			UProperty* NewProp_bNotifyPlayers = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bNotifyPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNotifyPlayers, VictoryBPFunctionLibrary_eventServerTravel_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bNotifyPlayers, VictoryBPFunctionLibrary_eventServerTravel_Parms), sizeof(bool), true);
			UProperty* NewProp_MapName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MapName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MapName, VictoryBPFunctionLibrary_eventServerTravel_Parms), 0x0010000000000080);
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventServerTravel_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bNotifyPlayers"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Server Travel! This is an async load level process which allows you to put up a UMG widget while the level loading occurs!"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SetBloomIntensity()
	{
		struct VictoryBPFunctionLibrary_eventSetBloomIntensity_Parms
		{
			APostProcessVolume* PostProcessVolume;
			float Intensity;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBloomIntensity"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventSetBloomIntensity_Parms));
			UProperty* NewProp_Intensity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Intensity"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Intensity, VictoryBPFunctionLibrary_eventSetBloomIntensity_Parms), 0x0010000000000080);
			UProperty* NewProp_PostProcessVolume = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PostProcessVolume"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PostProcessVolume, VictoryBPFunctionLibrary_eventSetBloomIntensity_Parms), 0x0010000000000080, Z_Construct_UClass_APostProcessVolume_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Post Process"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Modify the bloom intensity of a post process volume, by Community Member Sahkan"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SetComponentTickRate()
	{
		struct VictoryBPFunctionLibrary_eventSetComponentTickRate_Parms
		{
			UActorComponent* Component;
			float Seconds;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetComponentTickRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventSetComponentTickRate_Parms));
			UProperty* NewProp_Seconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Seconds"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Seconds, VictoryBPFunctionLibrary_eventSetComponentTickRate_Parms), 0x0010000000000080);
			UProperty* NewProp_Component = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Component"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Component, VictoryBPFunctionLibrary_eventSetComponentTickRate_Parms), 0x0010000000080080, Z_Construct_UClass_UActorComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Core"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Dynamically change how frequently in seconds a component will tick! Can be altered at any point during game-time! \x2665 Rama"));
			MetaData->SetValue(NewProp_Component, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SetGenericTeamId()
	{
		struct VictoryBPFunctionLibrary_eventSetGenericTeamId_Parms
		{
			AActor* Target;
			uint8 NewTeamId;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetGenericTeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventSetGenericTeamId_Parms));
			UProperty* NewProp_NewTeamId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewTeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NewTeamId, VictoryBPFunctionLibrary_eventSetGenericTeamId_Parms), 0x0010000000000080);
			UProperty* NewProp_Target = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Target"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Target, VictoryBPFunctionLibrary_eventSetGenericTeamId_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Team"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SpawnActorIntoLevel()
	{
		struct VictoryBPFunctionLibrary_eventSpawnActorIntoLevel_Parms
		{
			UObject* WorldContextObject;
			TSubclassOf<AActor>  ActorClass;
			FName Level;
			FVector Location;
			FRotator Rotation;
			bool SpawnEvenIfColliding;
			AActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SpawnActorIntoLevel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(VictoryBPFunctionLibrary_eventSpawnActorIntoLevel_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventSpawnActorIntoLevel_Parms), 0x0010000000000580, Z_Construct_UClass_AActor_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SpawnEvenIfColliding, VictoryBPFunctionLibrary_eventSpawnActorIntoLevel_Parms, bool);
			UProperty* NewProp_SpawnEvenIfColliding = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SpawnEvenIfColliding"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SpawnEvenIfColliding, VictoryBPFunctionLibrary_eventSpawnActorIntoLevel_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SpawnEvenIfColliding, VictoryBPFunctionLibrary_eventSpawnActorIntoLevel_Parms), sizeof(bool), true);
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, VictoryBPFunctionLibrary_eventSpawnActorIntoLevel_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, VictoryBPFunctionLibrary_eventSpawnActorIntoLevel_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Level = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Level"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(Level, VictoryBPFunctionLibrary_eventSpawnActorIntoLevel_Parms), 0x0010000000000080);
			UProperty* NewProp_ActorClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ActorClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(ActorClass, VictoryBPFunctionLibrary_eventSpawnActorIntoLevel_Parms), 0x0014000000000080, Z_Construct_UClass_AActor_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventSpawnActorIntoLevel_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Level"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SpawnEvenIfColliding"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Spawn an Actor and choose which level you want them to spawn into!"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_String__CombineStrings()
	{
		struct VictoryBPFunctionLibrary_eventString__CombineStrings_Parms
		{
			FString StringFirst;
			FString StringSecond;
			FString Separator;
			FString StringFirstLabel;
			FString StringSecondLabel;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String__CombineStrings"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventString__CombineStrings_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventString__CombineStrings_Parms), 0x0010000000000580);
			UProperty* NewProp_StringSecondLabel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StringSecondLabel"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(StringSecondLabel, VictoryBPFunctionLibrary_eventString__CombineStrings_Parms), 0x0010000000000080);
			UProperty* NewProp_StringFirstLabel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StringFirstLabel"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(StringFirstLabel, VictoryBPFunctionLibrary_eventString__CombineStrings_Parms), 0x0010000000000080);
			UProperty* NewProp_Separator = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Separator"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Separator, VictoryBPFunctionLibrary_eventString__CombineStrings_Parms), 0x0010000000000080);
			UProperty* NewProp_StringSecond = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StringSecond"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(StringSecond, VictoryBPFunctionLibrary_eventString__CombineStrings_Parms), 0x0010000000000080);
			UProperty* NewProp_StringFirst = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StringFirst"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(StringFirst, VictoryBPFunctionLibrary_eventString__CombineStrings_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Combines two strings together! The Separator and the Labels are optional"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_String__CombineStrings_Multi()
	{
		struct VictoryBPFunctionLibrary_eventString__CombineStrings_Multi_Parms
		{
			FString A;
			FString B;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String__CombineStrings_Multi"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventString__CombineStrings_Multi_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventString__CombineStrings_Multi_Parms), 0x0010000000000580);
			UProperty* NewProp_B = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("B"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(B, VictoryBPFunctionLibrary_eventString__CombineStrings_Multi_Parms), 0x0010000000000080);
			UProperty* NewProp_A = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("A"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(A, VictoryBPFunctionLibrary_eventString__CombineStrings_Multi_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|String"));
			MetaData->SetValue(ReturnFunction, TEXT("CommutativeAssociativeBinaryOperator"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("concatenate append"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Separator is always a space"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_String__ExplodeString()
	{
		struct VictoryBPFunctionLibrary_eventString__ExplodeString_Parms
		{
			TArray<FString> OutputStrings;
			FString InputString;
			FString Separator;
			int32 limit;
			bool bTrimElements;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String__ExplodeString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventString__ExplodeString_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bTrimElements, VictoryBPFunctionLibrary_eventString__ExplodeString_Parms, bool);
			UProperty* NewProp_bTrimElements = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bTrimElements"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bTrimElements, VictoryBPFunctionLibrary_eventString__ExplodeString_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bTrimElements, VictoryBPFunctionLibrary_eventString__ExplodeString_Parms), sizeof(bool), true);
			UProperty* NewProp_limit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("limit"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(limit, VictoryBPFunctionLibrary_eventString__ExplodeString_Parms), 0x0010000000000080);
			UProperty* NewProp_Separator = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Separator"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Separator, VictoryBPFunctionLibrary_eventString__ExplodeString_Parms), 0x0010000000000080);
			UProperty* NewProp_InputString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InputString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(InputString, VictoryBPFunctionLibrary_eventString__ExplodeString_Parms), 0x0010000000000080);
			UProperty* NewProp_OutputStrings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutputStrings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(OutputStrings, VictoryBPFunctionLibrary_eventString__ExplodeString_Parms), 0x0010000000000180);
			UProperty* NewProp_OutputStrings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_OutputStrings, TEXT("OutputStrings"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("String"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bTrimElements"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_limit"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Separator"), TEXT(","));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Explode string"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("split explode string"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Contributed by: Mindfane\n\nSplit a string into an array of substrings based on the given delimitter.\nUnlike ParseIntoArray() function which expects single character delimitters, this function can accept a delimitter that is also a string.\n\n@param InputString - The string that is to be exploded.\n@param Separator - The delimitter that is used for splitting (multi character strings are allowed)\n@param limit - If greater than zero, returns only the first x strings. Otherwsie returns all the substrings\n@param bTrimElelements - If True, then each subsctring is processed and any leading or trailing whitespcaes are trimmed."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_StringConversion__GetFloatAsStringWithPrecision()
	{
		struct VictoryBPFunctionLibrary_eventStringConversion__GetFloatAsStringWithPrecision_Parms
		{
			float TheFloat;
			FString TheString;
			int32 Precision;
			bool IncludeLeadingZero;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StringConversion__GetFloatAsStringWithPrecision"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventStringConversion__GetFloatAsStringWithPrecision_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IncludeLeadingZero, VictoryBPFunctionLibrary_eventStringConversion__GetFloatAsStringWithPrecision_Parms, bool);
			UProperty* NewProp_IncludeLeadingZero = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IncludeLeadingZero"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IncludeLeadingZero, VictoryBPFunctionLibrary_eventStringConversion__GetFloatAsStringWithPrecision_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(IncludeLeadingZero, VictoryBPFunctionLibrary_eventStringConversion__GetFloatAsStringWithPrecision_Parms), sizeof(bool), true);
			UProperty* NewProp_Precision = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Precision"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Precision, VictoryBPFunctionLibrary_eventStringConversion__GetFloatAsStringWithPrecision_Parms), 0x0010000000000080);
			UProperty* NewProp_TheString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TheString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TheString, VictoryBPFunctionLibrary_eventStringConversion__GetFloatAsStringWithPrecision_Parms), 0x0010000000000180);
			UProperty* NewProp_TheFloat = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TheFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TheFloat, VictoryBPFunctionLibrary_eventStringConversion__GetFloatAsStringWithPrecision_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_IncludeLeadingZero"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Precision"), TEXT("2"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the float as a String with Precision, Precision 0 = no decimal value. Precison 1 = 1 decimal place. The re-precisioned result is rounded appropriately."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Text_IsNumeric()
	{
		struct VictoryBPFunctionLibrary_eventText_IsNumeric_Parms
		{
			FText Text;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Text_IsNumeric"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventText_IsNumeric_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventText_IsNumeric_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventText_IsNumeric_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventText_IsNumeric_Parms), sizeof(bool), true);
			UProperty* NewProp_Text = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Text"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Text, VictoryBPFunctionLibrary_eventText_IsNumeric_Parms), 0x0010000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(NewProp_Text, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Text_ToFloat()
	{
		struct VictoryBPFunctionLibrary_eventText_ToFloat_Parms
		{
			FText Text;
			bool UseDotForThousands;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Text_ToFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventText_ToFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventText_ToFloat_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(UseDotForThousands, VictoryBPFunctionLibrary_eventText_ToFloat_Parms, bool);
			UProperty* NewProp_UseDotForThousands = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UseDotForThousands"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UseDotForThousands, VictoryBPFunctionLibrary_eventText_ToFloat_Parms), 0x0010040000000080, CPP_BOOL_PROPERTY_BITMASK(UseDotForThousands, VictoryBPFunctionLibrary_eventText_ToFloat_Parms), sizeof(bool), true);
			UProperty* NewProp_Text = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Text"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Text, VictoryBPFunctionLibrary_eventText_ToFloat_Parms), 0x0010000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("1"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_UseDotForThousands"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(NewProp_Text, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Text_ToInt()
	{
		struct VictoryBPFunctionLibrary_eventText_ToInt_Parms
		{
			FText Text;
			bool UseDotForThousands;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Text_ToInt"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventText_ToInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventText_ToInt_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(UseDotForThousands, VictoryBPFunctionLibrary_eventText_ToInt_Parms, bool);
			UProperty* NewProp_UseDotForThousands = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UseDotForThousands"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UseDotForThousands, VictoryBPFunctionLibrary_eventText_ToInt_Parms), 0x0010040000000080, CPP_BOOL_PROPERTY_BITMASK(UseDotForThousands, VictoryBPFunctionLibrary_eventText_ToInt_Parms), sizeof(bool), true);
			UProperty* NewProp_Text = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Text"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Text, VictoryBPFunctionLibrary_eventText_ToInt_Parms), 0x0010000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("1"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_UseDotForThousands"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(NewProp_Text, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TraceData__GetTraceDataFromCharacterSocket()
	{
		struct VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms
		{
			FVector TraceStart;
			FVector TraceEnd;
			AActor* TheCharacter;
			FRotator TraceRotation;
			float TraceLength;
			FName Socket;
			bool DrawTraceData;
			FLinearColor TraceDataColor;
			float TraceDataThickness;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TraceData__GetTraceDataFromCharacterSocket"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), sizeof(bool), true);
			UProperty* NewProp_TraceDataThickness = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceDataThickness"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TraceDataThickness, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), 0x0010000000000080);
			UProperty* NewProp_TraceDataColor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceDataColor"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceDataColor, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FLinearColor());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DrawTraceData, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms, bool);
			UProperty* NewProp_DrawTraceData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DrawTraceData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DrawTraceData, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DrawTraceData, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), sizeof(bool), true);
			UProperty* NewProp_Socket = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Socket"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(Socket, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), 0x0010000000000080);
			UProperty* NewProp_TraceLength = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceLength"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TraceLength, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), 0x0010000000000080);
			UProperty* NewProp_TraceRotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceRotation, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_TheCharacter = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TheCharacter"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TheCharacter, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_TraceEnd = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceEnd"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceEnd, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_TraceStart = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceStart"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceStart, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromCharacterSocket_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Traces"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DrawTraceData"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Socket"), TEXT("SocketName"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_TraceDataColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_TraceDataThickness"), TEXT("7.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_TraceLength"), TEXT("10240.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Does Not Do A Trace, But Obtains the Start and End for doing a Trace:\\n\\nTakes in an actor (for convenience) and tries to cast it to Character. Takes in a socket name to find on the Character's Mesh component, the socket location will be the start of the trace.\\n\\nAlso takes in the Angle / Rotator and the length of the trace you want to do. Option to draw the trace with variable thickness as it occurs.\\n\\nReturns what the Trace Start and End should be so you can plug these into any existing trace node you want.\\n\\nRequires: Character Mesh Component must be valid. Returns False if trace could not be done"));
			MetaData->SetValue(NewProp_TraceRotation, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TraceData__GetTraceDataFromSkeletalMeshSocket()
	{
		struct VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms
		{
			FVector TraceStart;
			FVector TraceEnd;
			USkeletalMeshComponent* Mesh;
			FRotator TraceRotation;
			float TraceLength;
			FName Socket;
			bool DrawTraceData;
			FLinearColor TraceDataColor;
			float TraceDataThickness;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TraceData__GetTraceDataFromSkeletalMeshSocket"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), sizeof(bool), true);
			UProperty* NewProp_TraceDataThickness = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceDataThickness"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TraceDataThickness, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), 0x0010000000000080);
			UProperty* NewProp_TraceDataColor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceDataColor"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceDataColor, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FLinearColor());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DrawTraceData, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms, bool);
			UProperty* NewProp_DrawTraceData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DrawTraceData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DrawTraceData, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DrawTraceData, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), sizeof(bool), true);
			UProperty* NewProp_Socket = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Socket"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(Socket, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), 0x0010000000000080);
			UProperty* NewProp_TraceLength = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceLength"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TraceLength, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), 0x0010000000000080);
			UProperty* NewProp_TraceRotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceRotation, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Mesh = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Mesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Mesh, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), 0x0010000000080080, Z_Construct_UClass_USkeletalMeshComponent_NoRegister());
			UProperty* NewProp_TraceEnd = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceEnd"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceEnd, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_TraceStart = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceStart"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceStart, VictoryBPFunctionLibrary_eventTraceData__GetTraceDataFromSkeletalMeshSocket_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Traces"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DrawTraceData"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Socket"), TEXT("SocketName"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_TraceDataColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_TraceDataThickness"), TEXT("7.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_TraceLength"), TEXT("10240.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Does Not Do A Trace, But Obtains the Start and End for doing a Trace:\\n\\nTakes in a Skeletal Mesh Component and a socket name to trace from. Also takes in the Angle / Rotator and the length of the trace you want to do.\\n\\nOption to draw the trace as a variable thickness line\\n\\nReturns what the Trace Start and End should be so you can plug these into any existing trace node you want.\\n\\n Requires: Mesh must be valid. Returns False if trace could not be done"));
			MetaData->SetValue(NewProp_TraceRotation, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_Mesh, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Traces__CharacterMeshTrace___ClosestBone()
	{
		struct VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms
		{
			AActor* TraceOwner;
			FVector TraceStart;
			FVector TraceEnd;
			FVector OutImpactPoint;
			FVector OutImpactNormal;
			FName ClosestBoneName;
			FVector ClosestBoneLocation;
			bool IsValid;
			AActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Traces__CharacterMeshTrace___ClosestBone"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms), 0x0010000000000580, Z_Construct_UClass_AActor_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms), sizeof(bool), true);
			UProperty* NewProp_ClosestBoneLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ClosestBoneLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ClosestBoneLocation, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_ClosestBoneName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ClosestBoneName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ClosestBoneName, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms), 0x0010000000000180);
			UProperty* NewProp_OutImpactNormal = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutImpactNormal"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutImpactNormal, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_OutImpactPoint = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutImpactPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutImpactPoint, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_TraceEnd = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceEnd"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceEnd, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_TraceStart = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceStart"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceStart, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_TraceOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TraceOwner, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestBone_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Traces"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Does a simple line trace given Trace Start and End, and if a Character is hit by the trace, then a component trace is performed on that character's mesh. Trace Owner is ignored when doing the trace.\\n\\nReturns the Character that was hit, as an Actor, as well as the name of the bone that was closest to the impact point of the trace. Also returns the impact point itself as well as the impact normal.\\n\\nUsing component trace ensures accuracy for testing against bones and sockets.\\n\\nIsValid: Will be true only if the component trace also hit someting. But the Returned Actor will contain an actor if any actor at all was hit by the simple trace."));
			MetaData->SetValue(NewProp_TraceEnd, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_TraceStart, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Traces__CharacterMeshTrace___ClosestSocket()
	{
		struct VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms
		{
			UObject* WorldContextObject;
			const AActor* TraceOwner;
			FVector TraceStart;
			FVector TraceEnd;
			FVector OutImpactPoint;
			FVector OutImpactNormal;
			FName ClosestSocketName;
			FVector SocketLocation;
			bool IsValid;
			AActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Traces__CharacterMeshTrace___ClosestSocket"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms), 0x0010000000000580, Z_Construct_UClass_AActor_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms), sizeof(bool), true);
			UProperty* NewProp_SocketLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SocketLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SocketLocation, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_ClosestSocketName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ClosestSocketName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ClosestSocketName, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms), 0x0010000000000180);
			UProperty* NewProp_OutImpactNormal = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutImpactNormal"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutImpactNormal, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_OutImpactPoint = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutImpactPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutImpactPoint, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_TraceEnd = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceEnd"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceEnd, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_TraceStart = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceStart"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceStart, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_TraceOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TraceOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TraceOwner, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms), 0x0010000000000082, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventTraces__CharacterMeshTrace___ClosestSocket_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Traces"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Does a simple line trace given Trace Start and End, and if a Character is hit by the trace, then a component trace is performed on that character's mesh. Returns the name of the socket that was closest to the impact point of the trace. Also returns the impact point itself as well as the impact normal. Also returns the Socket Location. Using component trace ensures accuracy for testing against bones and sockets."));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
			MetaData->SetValue(NewProp_TraceEnd, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_TraceStart, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_TraceOwner, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TransformVectorToActorSpace()
	{
		struct VictoryBPFunctionLibrary_eventTransformVectorToActorSpace_Parms
		{
			AActor* Actor;
			FVector InVector;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TransformVectorToActorSpace"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C20401, 65535, sizeof(VictoryBPFunctionLibrary_eventTransformVectorToActorSpace_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventTransformVectorToActorSpace_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_InVector = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InVector"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(InVector, VictoryBPFunctionLibrary_eventTransformVectorToActorSpace_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, VictoryBPFunctionLibrary_eventTransformVectorToActorSpace_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(NewProp_InVector, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TransformVectorToActorSpaceAngle()
	{
		struct VictoryBPFunctionLibrary_eventTransformVectorToActorSpaceAngle_Parms
		{
			AActor* Actor;
			FVector InVector;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TransformVectorToActorSpaceAngle"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C20401, 65535, sizeof(VictoryBPFunctionLibrary_eventTransformVectorToActorSpaceAngle_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventTransformVectorToActorSpaceAngle_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_InVector = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InVector"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(InVector, VictoryBPFunctionLibrary_eventTransformVectorToActorSpaceAngle_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Actor, VictoryBPFunctionLibrary_eventTransformVectorToActorSpaceAngle_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Transform"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(NewProp_InVector, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_UTCToLocal()
	{
		struct VictoryBPFunctionLibrary_eventUTCToLocal_Parms
		{
			FDateTime UTCTime;
			FDateTime LocalTime;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UTCToLocal"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventUTCToLocal_Parms));
			UProperty* NewProp_LocalTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalTime"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LocalTime, VictoryBPFunctionLibrary_eventUTCToLocal_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FDateTime());
			UProperty* NewProp_UTCTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UTCTime"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(UTCTime, VictoryBPFunctionLibrary_eventUTCToLocal_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FDateTime());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Rama Save System|File IO"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(NewProp_UTCTime, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Vector2DInterpTo()
	{
		struct VictoryBPFunctionLibrary_eventVector2DInterpTo_Parms
		{
			FVector2D Current;
			FVector2D Target;
			float DeltaTime;
			float InterpSpeed;
			FVector2D ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Vector2DInterpTo"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14822401, 65535, sizeof(VictoryBPFunctionLibrary_eventVector2DInterpTo_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVector2DInterpTo_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_InterpSpeed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InterpSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(InterpSpeed, VictoryBPFunctionLibrary_eventVector2DInterpTo_Parms), 0x0010000000000080);
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, VictoryBPFunctionLibrary_eventVector2DInterpTo_Parms), 0x0010000000000080);
			UProperty* NewProp_Target = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Target"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Target, VictoryBPFunctionLibrary_eventVector2DInterpTo_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Current = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Current"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Current, VictoryBPFunctionLibrary_eventVector2DInterpTo_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector2D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Interpolation"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("position"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UFUNCTION(BlueprintPure, Category=\"Math|Interpolation\", meta=(Keywords=\"position\"))"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Vector2DInterpTo_Constant()
	{
		struct VictoryBPFunctionLibrary_eventVector2DInterpTo_Constant_Parms
		{
			FVector2D Current;
			FVector2D Target;
			float DeltaTime;
			float InterpSpeed;
			FVector2D ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Vector2DInterpTo_Constant"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14822401, 65535, sizeof(VictoryBPFunctionLibrary_eventVector2DInterpTo_Constant_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVector2DInterpTo_Constant_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_InterpSpeed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InterpSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(InterpSpeed, VictoryBPFunctionLibrary_eventVector2DInterpTo_Constant_Parms), 0x0010000000000080);
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, VictoryBPFunctionLibrary_eventVector2DInterpTo_Constant_Parms), 0x0010000000000080);
			UProperty* NewProp_Target = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Target"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Target, VictoryBPFunctionLibrary_eventVector2DInterpTo_Constant_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Current = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Current"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Current, VictoryBPFunctionLibrary_eventVector2DInterpTo_Constant_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector2D());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Math"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("position"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Tries to reach Target at a constant rate.\n\n@param               Current                 Actual position\n@param               Target                  Target position\n@param               DeltaTime               Time since last tick\n@param               InterpSpeed             Interpolation speed\n@return              New interpolated position\n        //UFUNCTION(BlueprintPure, Category=\"Math|Interpolation\", meta=(Keywords=\"position\"))"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_AI_MoveToWithFilter()
	{
		struct VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms
		{
			APawn* Pawn;
			FVector Dest;
			TSubclassOf<UNavigationQueryFilter>  FilterClass;
			float AcceptanceRadius;
			bool bProjectDestinationToNavigation;
			bool bStopOnOverlap;
			bool bCanStrafe;
			TEnumAsByte<EPathFollowingRequestResult::Type> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_AI_MoveToWithFilter"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms), 0x0010000000000580, Z_Construct_UEnum_AIModule_EPathFollowingRequestResult());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanStrafe, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms, bool);
			UProperty* NewProp_bCanStrafe = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bCanStrafe"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanStrafe, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bCanStrafe, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStopOnOverlap, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms, bool);
			UProperty* NewProp_bStopOnOverlap = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bStopOnOverlap"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStopOnOverlap, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bStopOnOverlap, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bProjectDestinationToNavigation, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms, bool);
			UProperty* NewProp_bProjectDestinationToNavigation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bProjectDestinationToNavigation"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bProjectDestinationToNavigation, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bProjectDestinationToNavigation, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms), sizeof(bool), true);
			UProperty* NewProp_AcceptanceRadius = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AcceptanceRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AcceptanceRadius, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms), 0x0010000000000080);
			UProperty* NewProp_FilterClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FilterClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(FilterClass, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms), 0x0014000000000080, Z_Construct_UClass_UNavigationQueryFilter_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_Dest = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Dest"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Dest, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Pawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Pawn"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Pawn, VictoryBPFunctionLibrary_eventVictory_AI_MoveToWithFilter_Parms), 0x0010000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|AI Move To"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AcceptanceRadius"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bCanStrafe"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bProjectDestinationToNavigation"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bStopOnOverlap"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Move to Location with optional Query Filter!\n\n1. Create Custon Nav Area Classes.\n\n2. Use Nav Modifier Volumes to apply custom area class data within the level, then\n\n3. Create Query Filters which alter/exclude those custom nav areas.\n\n4. Can then choose to use the filters per character or even per Move To using this node.\n\n<3 Rama\n\n@param FilterClass - Allows different types of units to path in different ways all the time, or path differently per Move To using this node!\n@param bProjectDestinationToNavigation - Whether to attempt to find a nearby point on the nav mesh below/above/close to the supplied point. Uses the Agent's Nav Extent for the projection\n@param bStopOnOverlap - Add pawn's radius to AcceptanceRadius\n@param bCanStrafe - Set focus related flag: bAllowStrafe\n@return Whether the Pawn's AI Controller is valid and goal can be pathed to"));
			MetaData->SetValue(NewProp_Dest, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_Get_Pixel()
	{
		struct VictoryBPFunctionLibrary_eventVictory_Get_Pixel_Parms
		{
			TArray<FLinearColor> Pixels;
			int32 ImageHeight;
			int32 x;
			int32 y;
			FLinearColor FoundColor;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_Get_Pixel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_Get_Pixel_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventVictory_Get_Pixel_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventVictory_Get_Pixel_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventVictory_Get_Pixel_Parms), sizeof(bool), true);
			UProperty* NewProp_FoundColor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FoundColor"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FoundColor, VictoryBPFunctionLibrary_eventVictory_Get_Pixel_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(y, VictoryBPFunctionLibrary_eventVictory_Get_Pixel_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(x, VictoryBPFunctionLibrary_eventVictory_Get_Pixel_Parms), 0x0010000000000080);
			UProperty* NewProp_ImageHeight = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ImageHeight"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ImageHeight, VictoryBPFunctionLibrary_eventVictory_Get_Pixel_Parms), 0x0010000000000080);
			UProperty* NewProp_Pixels = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Pixels"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Pixels, VictoryBPFunctionLibrary_eventVictory_Get_Pixel_Parms), 0x0010000008000182);
			UProperty* NewProp_Pixels_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Pixels, TEXT("Pixels"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FLinearColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Load Texture From File"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("image coordinate index map value"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Retrieve a pixel color value given the pixel array, the image height, and the coordinates. Returns false if the coordinates were not valid. Pixel coordinates start from upper left corner as 0,0. X= horizontal, Y = vertical"));
			MetaData->SetValue(NewProp_Pixels, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetGPUBrand()
	{
		struct VictoryBPFunctionLibrary_eventVictory_GetGPUBrand_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_GetGPUBrand"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_GetGPUBrand_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictory_GetGPUBrand_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|GPU"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("GPU  <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetGPUInfo()
	{
		struct VictoryBPFunctionLibrary_eventVictory_GetGPUInfo_Parms
		{
			FString DeviceDescription;
			FString Provider;
			FString DriverVersion;
			FString DriverDate;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_GetGPUInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_GetGPUInfo_Parms));
			UProperty* NewProp_DriverDate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DriverDate"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DriverDate, VictoryBPFunctionLibrary_eventVictory_GetGPUInfo_Parms), 0x0010000000000180);
			UProperty* NewProp_DriverVersion = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DriverVersion"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DriverVersion, VictoryBPFunctionLibrary_eventVictory_GetGPUInfo_Parms), 0x0010000000000180);
			UProperty* NewProp_Provider = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Provider"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Provider, VictoryBPFunctionLibrary_eventVictory_GetGPUInfo_Parms), 0x0010000000000180);
			UProperty* NewProp_DeviceDescription = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeviceDescription"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DeviceDescription, VictoryBPFunctionLibrary_eventVictory_GetGPUInfo_Parms), 0x0010000000000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|GPU"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetGRHIAdapterName()
	{
		struct VictoryBPFunctionLibrary_eventVictory_GetGRHIAdapterName_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_GetGRHIAdapterName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_GetGRHIAdapterName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictory_GetGRHIAdapterName_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|GPU"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("GPU"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetPixelFromT2D()
	{
		struct VictoryBPFunctionLibrary_eventVictory_GetPixelFromT2D_Parms
		{
			UTexture2D* T2D;
			int32 X;
			int32 Y;
			FLinearColor PixelColor;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_GetPixelFromT2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_GetPixelFromT2D_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventVictory_GetPixelFromT2D_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventVictory_GetPixelFromT2D_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventVictory_GetPixelFromT2D_Parms), sizeof(bool), true);
			UProperty* NewProp_PixelColor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PixelColor"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PixelColor, VictoryBPFunctionLibrary_eventVictory_GetPixelFromT2D_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_Y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Y"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Y, VictoryBPFunctionLibrary_eventVictory_GetPixelFromT2D_Parms), 0x0010000000000080);
			UProperty* NewProp_X = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("X"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(X, VictoryBPFunctionLibrary_eventVictory_GetPixelFromT2D_Parms), 0x0010000000000080);
			UProperty* NewProp_T2D = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("T2D"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(T2D, VictoryBPFunctionLibrary_eventVictory_GetPixelFromT2D_Parms), 0x0010000000000080, Z_Construct_UClass_UTexture2D_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Load Texture From File"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("create image png jpg jpeg bmp bitmap ico icon exr icns"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("This will modify the original T2D to remove sRGB and change compression to VectorDisplacementMap to ensure accurate pixel reading. -Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetPixelsArrayFromT2D()
	{
		struct VictoryBPFunctionLibrary_eventVictory_GetPixelsArrayFromT2D_Parms
		{
			UTexture2D* T2D;
			int32 TextureWidth;
			int32 TextureHeight;
			TArray<FLinearColor> PixelArray;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_GetPixelsArrayFromT2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_GetPixelsArrayFromT2D_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventVictory_GetPixelsArrayFromT2D_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventVictory_GetPixelsArrayFromT2D_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventVictory_GetPixelsArrayFromT2D_Parms), sizeof(bool), true);
			UProperty* NewProp_PixelArray = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PixelArray"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(PixelArray, VictoryBPFunctionLibrary_eventVictory_GetPixelsArrayFromT2D_Parms), 0x0010000000000180);
			UProperty* NewProp_PixelArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PixelArray, TEXT("PixelArray"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_TextureHeight = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TextureHeight"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(TextureHeight, VictoryBPFunctionLibrary_eventVictory_GetPixelsArrayFromT2D_Parms), 0x0010000000000180);
			UProperty* NewProp_TextureWidth = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TextureWidth"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(TextureWidth, VictoryBPFunctionLibrary_eventVictory_GetPixelsArrayFromT2D_Parms), 0x0010000000000180);
			UProperty* NewProp_T2D = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("T2D"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(T2D, VictoryBPFunctionLibrary_eventVictory_GetPixelsArrayFromT2D_Parms), 0x0010000000000080, Z_Construct_UClass_UTexture2D_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Load Texture From File"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("create image png jpg jpeg bmp bitmap ico icon exr icns"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("This will modify the original T2D to remove sRGB and change compression to VectorDisplacementMap to ensure accurate pixel reading. -Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetStringFromOSClipboard()
	{
		struct VictoryBPFunctionLibrary_eventVictory_GetStringFromOSClipboard_Parms
		{
			FString FromClipboard;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_GetStringFromOSClipboard"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_GetStringFromOSClipboard_Parms));
			UProperty* NewProp_FromClipboard = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FromClipboard"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FromClipboard, VictoryBPFunctionLibrary_eventVictory_GetStringFromOSClipboard_Parms), 0x0010000000000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_LoadTexture2D_FromFile()
	{
		struct VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Parms
		{
			FString FullFilePath;
			EJoyImageFormats ImageFormat;
			bool IsValid;
			int32 Width;
			int32 Height;
			UTexture2D* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_LoadTexture2D_FromFile"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Parms), 0x0010000000000580, Z_Construct_UClass_UTexture2D_NoRegister());
			UProperty* NewProp_Height = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Height"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Height, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Parms), 0x0010000000000180);
			UProperty* NewProp_Width = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Width"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Width, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Parms), 0x0010000000000180);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Parms), sizeof(bool), true);
			UProperty* NewProp_ImageFormat = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ImageFormat"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(ImageFormat, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Parms), 0x0010000000000080, Z_Construct_UEnum_VictoryBPLibrary_EJoyImageFormats());
			UProperty* NewProp_ImageFormat_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_ImageFormat, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_FullFilePath = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FullFilePath"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FullFilePath, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Load Texture From File"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("image png jpg jpeg bmp bitmap ico icon exr icns"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Load a Texture2D from a JPG,PNG,BMP,ICO,EXR,ICNS file! IsValid tells you if file path was valid or not. Enjoy! -Rama"));
			MetaData->SetValue(NewProp_FullFilePath, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_LoadTexture2D_FromFile_Pixels()
	{
		struct VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Pixels_Parms
		{
			FString FullFilePath;
			EJoyImageFormats ImageFormat;
			bool IsValid;
			int32 Width;
			int32 Height;
			TArray<FLinearColor> OutPixels;
			UTexture2D* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_LoadTexture2D_FromFile_Pixels"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Pixels_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Pixels_Parms), 0x0010000000000580, Z_Construct_UClass_UTexture2D_NoRegister());
			UProperty* NewProp_OutPixels = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutPixels"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(OutPixels, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Pixels_Parms), 0x0010000000000180);
			UProperty* NewProp_OutPixels_Inner = new(EC_InternalUseOnlyConstructor, NewProp_OutPixels, TEXT("OutPixels"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_Height = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Height"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Height, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Pixels_Parms), 0x0010000000000180);
			UProperty* NewProp_Width = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Width"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Width, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Pixels_Parms), 0x0010000000000180);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Pixels_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Pixels_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Pixels_Parms), sizeof(bool), true);
			UProperty* NewProp_ImageFormat = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ImageFormat"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(ImageFormat, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Pixels_Parms), 0x0010000000000080, Z_Construct_UEnum_VictoryBPLibrary_EJoyImageFormats());
			UProperty* NewProp_ImageFormat_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_ImageFormat, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_FullFilePath = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FullFilePath"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FullFilePath, VictoryBPFunctionLibrary_eventVictory_LoadTexture2D_FromFile_Pixels_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Load Texture From File"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("image png jpg jpeg bmp bitmap ico icon exr icns"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Load a Texture2D from a JPG,PNG,BMP,ICO,EXR,ICNS file! IsValid tells you if file path was valid or not. Enjoy! -Rama"));
			MetaData->SetValue(NewProp_FullFilePath, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_SavePixels()
	{
		struct VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms
		{
			FString FullFilePath;
			int32 Width;
			int32 Height;
			TArray<FLinearColor> ImagePixels;
			bool SaveAsBMP;
			bool sRGB;
			FString ErrorString;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_SavePixels"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms), sizeof(bool), true);
			UProperty* NewProp_ErrorString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ErrorString, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms), 0x0010000000000180);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(sRGB, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms, bool);
			UProperty* NewProp_sRGB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("sRGB"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(sRGB, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(sRGB, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SaveAsBMP, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms, bool);
			UProperty* NewProp_SaveAsBMP = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SaveAsBMP"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SaveAsBMP, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SaveAsBMP, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms), sizeof(bool), true);
			UProperty* NewProp_ImagePixels = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ImagePixels"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ImagePixels, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms), 0x0010000008000182);
			UProperty* NewProp_ImagePixels_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ImagePixels, TEXT("ImagePixels"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_Height = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Height"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Height, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms), 0x0010000000000080);
			UProperty* NewProp_Width = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Width"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Width, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms), 0x0010000000000080);
			UProperty* NewProp_FullFilePath = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FullFilePath"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FullFilePath, VictoryBPFunctionLibrary_eventVictory_SavePixels_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Load Texture From File"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("create image png jpg jpeg bmp bitmap ico icon exr icns"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Save an array of pixels to disk as a PNG! It is very important that you supply the curret width and height of the image! Returns false if Width * Height != Array length or file could not be saved to the location specified. I return an ErrorString to clarify what the exact issue was. -Rama"));
			MetaData->SetValue(NewProp_ImagePixels, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_FullFilePath, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_SaveStringToOSClipboard()
	{
		struct VictoryBPFunctionLibrary_eventVictory_SaveStringToOSClipboard_Parms
		{
			FString ToClipboard;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_SaveStringToOSClipboard"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_SaveStringToOSClipboard_Parms));
			UProperty* NewProp_ToClipboard = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ToClipboard"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ToClipboard, VictoryBPFunctionLibrary_eventVictory_SaveStringToOSClipboard_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(NewProp_ToClipboard, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_SecondsToHoursMinutesSeconds()
	{
		struct VictoryBPFunctionLibrary_eventVictory_SecondsToHoursMinutesSeconds_Parms
		{
			float Seconds;
			bool TrimZeroes;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Victory_SecondsToHoursMinutesSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictory_SecondsToHoursMinutesSeconds_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictory_SecondsToHoursMinutesSeconds_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(TrimZeroes, VictoryBPFunctionLibrary_eventVictory_SecondsToHoursMinutesSeconds_Parms, bool);
			UProperty* NewProp_TrimZeroes = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TrimZeroes"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(TrimZeroes, VictoryBPFunctionLibrary_eventVictory_SecondsToHoursMinutesSeconds_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(TrimZeroes, VictoryBPFunctionLibrary_eventVictory_SecondsToHoursMinutesSeconds_Parms), sizeof(bool), true);
			UProperty* NewProp_Seconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Seconds"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Seconds, VictoryBPFunctionLibrary_eventVictory_SecondsToHoursMinutesSeconds_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("File BP Library"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_TrimZeroes"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Handy option to trim any extra 00: 's while keeping a base set of 00:ss as per user expectation. 00:05:30 will become 05:30. \x2665 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryAppendInline()
	{
		struct VictoryBPFunctionLibrary_eventVictoryAppendInline_Parms
		{
			FString String;
			FString ToAppend;
			FString Result;
			bool AppendNewline;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryAppendInline"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryAppendInline_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(AppendNewline, VictoryBPFunctionLibrary_eventVictoryAppendInline_Parms, bool);
			UProperty* NewProp_AppendNewline = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AppendNewline"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AppendNewline, VictoryBPFunctionLibrary_eventVictoryAppendInline_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(AppendNewline, VictoryBPFunctionLibrary_eventVictoryAppendInline_Parms), sizeof(bool), true);
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Result, VictoryBPFunctionLibrary_eventVictoryAppendInline_Parms), 0x0010000000000180);
			UProperty* NewProp_ToAppend = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ToAppend"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ToAppend, VictoryBPFunctionLibrary_eventVictoryAppendInline_Parms), 0x0010000000000080);
			UProperty* NewProp_String = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("String"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(String, VictoryBPFunctionLibrary_eventVictoryAppendInline_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|String"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AppendNewline"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("concatenate append"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(NewProp_ToAppend, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryCreateProc()
	{
		struct VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms
		{
			int32 ProcessId;
			FString FullPathOfProgramToRun;
			TArray<FString> CommandlineArgs;
			bool Detach;
			bool Hidden;
			int32 Priority;
			FString OptionalWorkingDirectory;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryCreateProc"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms));
			UProperty* NewProp_OptionalWorkingDirectory = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OptionalWorkingDirectory"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OptionalWorkingDirectory, VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms), 0x0010000000000080);
			UProperty* NewProp_Priority = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Priority"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Priority, VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Hidden, VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms, bool);
			UProperty* NewProp_Hidden = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Hidden"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Hidden, VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Hidden, VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Detach, VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms, bool);
			UProperty* NewProp_Detach = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Detach"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Detach, VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Detach, VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms), sizeof(bool), true);
			UProperty* NewProp_CommandlineArgs = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CommandlineArgs"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(CommandlineArgs, VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms), 0x0010000000000080);
			UProperty* NewProp_CommandlineArgs_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CommandlineArgs, TEXT("CommandlineArgs"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_FullPathOfProgramToRun = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FullPathOfProgramToRun"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FullPathOfProgramToRun, VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms), 0x0010000000000080);
			UProperty* NewProp_ProcessId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ProcessId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ProcessId, VictoryBPFunctionLibrary_eventVictoryCreateProc_Parms), 0x0010000000000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|System"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Priority"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Launch a new process, if it is not set to be detached, UE4 will not fully close until the other process completes.\n\nThe new process id is returned!\n\nPriority options: -2 idle, -1 low, 0 normal, 1 high, 2 higher\n\n\x2665 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryDestructible_DestroyChunk()
	{
		struct VictoryBPFunctionLibrary_eventVictoryDestructible_DestroyChunk_Parms
		{
			UDestructibleComponent* DestructibleComp;
			int32 HitItem;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryDestructible_DestroyChunk"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryDestructible_DestroyChunk_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventVictoryDestructible_DestroyChunk_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventVictoryDestructible_DestroyChunk_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventVictoryDestructible_DestroyChunk_Parms), sizeof(bool), true);
			UProperty* NewProp_HitItem = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("HitItem"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(HitItem, VictoryBPFunctionLibrary_eventVictoryDestructible_DestroyChunk_Parms), 0x0010000000000080);
			UProperty* NewProp_DestructibleComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DestructibleComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DestructibleComp, VictoryBPFunctionLibrary_eventVictoryDestructible_DestroyChunk_Parms), 0x0010000000080080, Z_Construct_UClass_UDestructibleComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Physics"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("APEX Piece fracture damage PhysX Physics"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(NewProp_DestructibleComp, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryFloatMinusEquals()
	{
		struct VictoryBPFunctionLibrary_eventVictoryFloatMinusEquals_Parms
		{
			float Float;
			float Sub;
			float FloatOut;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryFloatMinusEquals"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryFloatMinusEquals_Parms));
			UProperty* NewProp_FloatOut = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FloatOut"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(FloatOut, VictoryBPFunctionLibrary_eventVictoryFloatMinusEquals_Parms), 0x0010000000000180);
			UProperty* NewProp_Sub = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Sub"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Sub, VictoryBPFunctionLibrary_eventVictoryFloatMinusEquals_Parms), 0x0010000000000080);
			UProperty* NewProp_Float = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Float"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Float, VictoryBPFunctionLibrary_eventVictoryFloatMinusEquals_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Math|Float"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("-="));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("decrement float"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Easily subtract from a float! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryFloatPlusEquals()
	{
		struct VictoryBPFunctionLibrary_eventVictoryFloatPlusEquals_Parms
		{
			float Float;
			float Add;
			float FloatOut;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryFloatPlusEquals"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryFloatPlusEquals_Parms));
			UProperty* NewProp_FloatOut = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FloatOut"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(FloatOut, VictoryBPFunctionLibrary_eventVictoryFloatPlusEquals_Parms), 0x0010000000000180);
			UProperty* NewProp_Add = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Add"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Add, VictoryBPFunctionLibrary_eventVictoryFloatPlusEquals_Parms), 0x0010000000000080);
			UProperty* NewProp_Float = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Float"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Float, VictoryBPFunctionLibrary_eventVictoryFloatPlusEquals_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Math|Float"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("+="));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("increment float"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Easily add to a float! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetAllActionKeyBindings()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetAllActionKeyBindings_Parms
		{
			TArray<FVictoryInput> Bindings;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetAllActionKeyBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetAllActionKeyBindings_Parms));
			UProperty* NewProp_Bindings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Bindings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Bindings, VictoryBPFunctionLibrary_eventVictoryGetAllActionKeyBindings_Parms), 0x0010000000000180);
			UProperty* NewProp_Bindings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Bindings, TEXT("Bindings"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVictoryInput());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetAllAxisAndActionMappingsForKey()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetAllAxisAndActionMappingsForKey_Parms
		{
			FKey Key;
			TArray<FVictoryInput> ActionBindings;
			TArray<FVictoryInputAxis> AxisBindings;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetAllAxisAndActionMappingsForKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetAllAxisAndActionMappingsForKey_Parms));
			UProperty* NewProp_AxisBindings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AxisBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AxisBindings, VictoryBPFunctionLibrary_eventVictoryGetAllAxisAndActionMappingsForKey_Parms), 0x0010000000000180);
			UProperty* NewProp_AxisBindings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AxisBindings, TEXT("AxisBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVictoryInputAxis());
			UProperty* NewProp_ActionBindings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ActionBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ActionBindings, VictoryBPFunctionLibrary_eventVictoryGetAllAxisAndActionMappingsForKey_Parms), 0x0010000000000180);
			UProperty* NewProp_ActionBindings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ActionBindings, TEXT("ActionBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVictoryInput());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Key, VictoryBPFunctionLibrary_eventVictoryGetAllAxisAndActionMappingsForKey_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FKey());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetAllAxisKeyBindings()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetAllAxisKeyBindings_Parms
		{
			TArray<FVictoryInputAxis> Bindings;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetAllAxisKeyBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetAllAxisKeyBindings_Parms));
			UProperty* NewProp_Bindings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Bindings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Bindings, VictoryBPFunctionLibrary_eventVictoryGetAllAxisKeyBindings_Parms), 0x0010000000000180);
			UProperty* NewProp_Bindings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Bindings, TEXT("Bindings"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVictoryInputAxis());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetApplicationName()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetApplicationName_Parms
		{
			int32 ProcessId;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetApplicationName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetApplicationName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetApplicationName_Parms), 0x0010000000000580);
			UProperty* NewProp_ProcessId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ProcessId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ProcessId, VictoryBPFunctionLibrary_eventVictoryGetApplicationName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|System"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("You can obtain ProcessID from processes you initiate via VictoryCreateProc"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Bool()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Bool_Parms
		{
			FString SectionName;
			FString VariableName;
			bool IsValid;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetCustomConfigVar_Bool"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Bool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Bool_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Bool_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Bool_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Bool_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Bool_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Bool_Parms), sizeof(bool), true);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Bool_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Bool_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Color()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Color_Parms
		{
			FString SectionName;
			FString VariableName;
			bool IsValid;
			FLinearColor ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetCustomConfigVar_Color"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Color_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Color_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FLinearColor());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Color_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Color_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Color_Parms), sizeof(bool), true);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Color_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Color_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Float()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Float_Parms
		{
			FString SectionName;
			FString VariableName;
			bool IsValid;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetCustomConfigVar_Float"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Float_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Float_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Float_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Float_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Float_Parms), sizeof(bool), true);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Float_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Float_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Int()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Int_Parms
		{
			FString SectionName;
			FString VariableName;
			bool IsValid;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetCustomConfigVar_Int"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Int_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Int_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Int_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Int_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Int_Parms), sizeof(bool), true);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Int_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Int_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Rotator()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Rotator_Parms
		{
			FString SectionName;
			FString VariableName;
			bool IsValid;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetCustomConfigVar_Rotator"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Rotator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Rotator_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Rotator_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Rotator_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Rotator_Parms), sizeof(bool), true);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Rotator_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Rotator_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_String()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_String_Parms
		{
			FString SectionName;
			FString VariableName;
			bool IsValid;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetCustomConfigVar_String"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_String_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_String_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_String_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_String_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_String_Parms), sizeof(bool), true);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_String_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_String_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Vector()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector_Parms
		{
			FString SectionName;
			FString VariableName;
			bool IsValid;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetCustomConfigVar_Vector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector_Parms), sizeof(bool), true);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Vector2D()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector2D_Parms
		{
			FString SectionName;
			FString VariableName;
			bool IsValid;
			FVector2D ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetCustomConfigVar_Vector2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector2D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector2D_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector2D());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector2D_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector2D_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector2D_Parms), sizeof(bool), true);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector2D_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictoryGetCustomConfigVar_Vector2D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetSoundVolume()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetSoundVolume_Parms
		{
			USoundClass* SoundClassObject;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetSoundVolume"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetSoundVolume_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetSoundVolume_Parms), 0x0010000000000580);
			UProperty* NewProp_SoundClassObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SoundClassObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(SoundClassObject, VictoryBPFunctionLibrary_eventVictoryGetSoundVolume_Parms), 0x0010000000000080, Z_Construct_UClass_USoundClass_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Sound"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get Current Sound Volume! Returns -1 if sound class was not found"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetVictoryInput()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetVictoryInput_Parms
		{
			FKeyEvent KeyEvent;
			FVictoryInput ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetVictoryInput"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetVictoryInput_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetVictoryInput_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVictoryInput());
			UProperty* NewProp_KeyEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(KeyEvent, VictoryBPFunctionLibrary_eventVictoryGetVictoryInput_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FKeyEvent());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Action Mapping"));
			MetaData->SetValue(NewProp_KeyEvent, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetVictoryInputAxis()
	{
		struct VictoryBPFunctionLibrary_eventVictoryGetVictoryInputAxis_Parms
		{
			FKeyEvent KeyEvent;
			FVictoryInputAxis ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryGetVictoryInputAxis"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryGetVictoryInputAxis_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryGetVictoryInputAxis_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVictoryInputAxis());
			UProperty* NewProp_KeyEvent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(KeyEvent, VictoryBPFunctionLibrary_eventVictoryGetVictoryInputAxis_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FKeyEvent());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Axis Mapping"));
			MetaData->SetValue(NewProp_KeyEvent, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryIntMinusEquals()
	{
		struct VictoryBPFunctionLibrary_eventVictoryIntMinusEquals_Parms
		{
			int32 Int;
			int32 Sub;
			int32 IntOut;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryIntMinusEquals"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryIntMinusEquals_Parms));
			UProperty* NewProp_IntOut = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IntOut"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(IntOut, VictoryBPFunctionLibrary_eventVictoryIntMinusEquals_Parms), 0x0010000000000180);
			UProperty* NewProp_Sub = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Sub"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Sub, VictoryBPFunctionLibrary_eventVictoryIntMinusEquals_Parms), 0x0010000000000080);
			UProperty* NewProp_Int = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Int"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Int, VictoryBPFunctionLibrary_eventVictoryIntMinusEquals_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Math|Integer"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("-="));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("decrement integer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Easily subtract from an integer! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryIntPlusEquals()
	{
		struct VictoryBPFunctionLibrary_eventVictoryIntPlusEquals_Parms
		{
			int32 Int;
			int32 Add;
			int32 IntOut;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryIntPlusEquals"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryIntPlusEquals_Parms));
			UProperty* NewProp_IntOut = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IntOut"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(IntOut, VictoryBPFunctionLibrary_eventVictoryIntPlusEquals_Parms), 0x0010000000000180);
			UProperty* NewProp_Add = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Add"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Add, VictoryBPFunctionLibrary_eventVictoryIntPlusEquals_Parms), 0x0010000000000080);
			UProperty* NewProp_Int = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Int"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Int, VictoryBPFunctionLibrary_eventVictoryIntPlusEquals_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Math|Integer"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("+="));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("increment integer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Easily add to an integer! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryIsApplicationRunning()
	{
		struct VictoryBPFunctionLibrary_eventVictoryIsApplicationRunning_Parms
		{
			int32 ProcessId;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryIsApplicationRunning"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryIsApplicationRunning_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventVictoryIsApplicationRunning_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventVictoryIsApplicationRunning_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventVictoryIsApplicationRunning_Parms), sizeof(bool), true);
			UProperty* NewProp_ProcessId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ProcessId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ProcessId, VictoryBPFunctionLibrary_eventVictoryIsApplicationRunning_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|System"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("You can obtain ProcessID from processes you initiate via VictoryCreateProc"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryISM_ConvertToVictoryISMActors()
	{
		struct VictoryBPFunctionLibrary_eventVictoryISM_ConvertToVictoryISMActors_Parms
		{
			UObject* WorldContextObject;
			TSubclassOf<AActor>  ActorClass;
			TArray<AVictoryISM*> CreatedISMActors;
			bool DestroyOriginalActors;
			int32 MinCountToCreateISM;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryISM_ConvertToVictoryISMActors"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryISM_ConvertToVictoryISMActors_Parms));
			UProperty* NewProp_MinCountToCreateISM = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MinCountToCreateISM"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MinCountToCreateISM, VictoryBPFunctionLibrary_eventVictoryISM_ConvertToVictoryISMActors_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DestroyOriginalActors, VictoryBPFunctionLibrary_eventVictoryISM_ConvertToVictoryISMActors_Parms, bool);
			UProperty* NewProp_DestroyOriginalActors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DestroyOriginalActors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DestroyOriginalActors, VictoryBPFunctionLibrary_eventVictoryISM_ConvertToVictoryISMActors_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DestroyOriginalActors, VictoryBPFunctionLibrary_eventVictoryISM_ConvertToVictoryISMActors_Parms), sizeof(bool), true);
			UProperty* NewProp_CreatedISMActors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CreatedISMActors"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(CreatedISMActors, VictoryBPFunctionLibrary_eventVictoryISM_ConvertToVictoryISMActors_Parms), 0x0010000000000180);
			UProperty* NewProp_CreatedISMActors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CreatedISMActors, TEXT("CreatedISMActors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AVictoryISM_NoRegister());
			UProperty* NewProp_ActorClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ActorClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(ActorClass, VictoryBPFunctionLibrary_eventVictoryISM_ConvertToVictoryISMActors_Parms), 0x0014000000000080, Z_Construct_UClass_AActor_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventVictoryISM_ConvertToVictoryISMActors_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Victory Instanced Static Mesh"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DestroyOriginalActors"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_MinCountToCreateISM"), TEXT("2"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Finds all instances of a specified Blueprint or class, and all subclasses of this class, and converts them into a single Instanced Static Mesh Actor! Returns the created Victory ISM actors. Please note all actors of subclasses are found as well, so use a very specific blueprint / class if you only want to generate Victory ISM actors for specific classes! Ignores actor classes that dont have a static mesh component. Please note that instanced static mesh actors can only be created for actors sharing the same static mesh asset. Different Instanced Static Mesh Actors are created for each unique static mesh asset found in the whole group of actors!"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryISM_GetAllVictoryISMActors()
	{
		struct VictoryBPFunctionLibrary_eventVictoryISM_GetAllVictoryISMActors_Parms
		{
			UObject* WorldContextObject;
			TArray<AVictoryISM*> Out;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryISM_GetAllVictoryISMActors"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryISM_GetAllVictoryISMActors_Parms));
			UProperty* NewProp_Out = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Out"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Out, VictoryBPFunctionLibrary_eventVictoryISM_GetAllVictoryISMActors_Parms), 0x0010000000000180);
			UProperty* NewProp_Out_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Out, TEXT("Out"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AVictoryISM_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventVictoryISM_GetAllVictoryISMActors_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Victory Instanced Static Mesh"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Retrieve an array of all of the Victory Instanced Static Mesh Actors that have been created during runtime!"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryLoadLevelInstance()
	{
		struct VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms
		{
			UObject* WorldContextObject;
			FString MapFolderOffOfContent;
			FString LevelName;
			int32 InstanceNumber;
			FVector Location;
			FRotator Rotation;
			bool Success;
			ULevelStreaming* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryLoadLevelInstance"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms), 0x0010000000000580, Z_Construct_UClass_ULevelStreaming_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Success, VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms, bool);
			UProperty* NewProp_Success = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Success"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Success, VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(Success, VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms), sizeof(bool), true);
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_InstanceNumber = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InstanceNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(InstanceNumber, VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms), 0x0010000000000080);
			UProperty* NewProp_LevelName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LevelName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LevelName, VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms), 0x0010000000000080);
			UProperty* NewProp_MapFolderOffOfContent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MapFolderOffOfContent"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MapFolderOffOfContent, VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms), 0x0010000000000080);
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventVictoryLoadLevelInstance_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Dynamic Level Generation"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Load a level to a specific location and rotation, can create multiple of the same level!\n\nEnsure that each InstanceNumber is unique to spawn multiple instances of the same level!\n\n<3 Rama\n\n@param MapFolderOffOfContent - Maps or Maps/TileSets/TileSet1  etc\n@param LevelName - Just the level name itself, such as Tile1\n@param InstanceNumber - Ensure this is unique by keeping count to spawn as many instances of same level as you want!\n@param Location - Worldspace location where the level should be spawned\n@param Rotation - Worldspace rotation for rotating the entire level\n@return false if the level name was not found"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__GameRootDirectory()
	{
		struct VictoryBPFunctionLibrary_eventVictoryPaths__GameRootDirectory_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPaths__GameRootDirectory"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryPaths__GameRootDirectory_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryPaths__GameRootDirectory_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Paths"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("InstallDir/GameName"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__LogsDir()
	{
		struct VictoryBPFunctionLibrary_eventVictoryPaths__LogsDir_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPaths__LogsDir"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryPaths__LogsDir_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryPaths__LogsDir_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Paths"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("InstallDir/GameName/Saved/Logs"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__SavedDir()
	{
		struct VictoryBPFunctionLibrary_eventVictoryPaths__SavedDir_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPaths__SavedDir"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryPaths__SavedDir_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryPaths__SavedDir_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Paths"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("InstallDir/GameName/Saved"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__ScreenShotsDir()
	{
		struct VictoryBPFunctionLibrary_eventVictoryPaths__ScreenShotsDir_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPaths__ScreenShotsDir"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryPaths__ScreenShotsDir_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryPaths__ScreenShotsDir_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Paths"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("InstallDir/GameName/Saved/Screenshots/Windows"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__Win64Dir_BinaryLocation()
	{
		struct VictoryBPFunctionLibrary_eventVictoryPaths__Win64Dir_BinaryLocation_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPaths__Win64Dir_BinaryLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryPaths__Win64Dir_BinaryLocation_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryPaths__Win64Dir_BinaryLocation_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Paths"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("InstallDir/GameName/Binaries/Win64"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__WindowsNoEditorDir()
	{
		struct VictoryBPFunctionLibrary_eventVictoryPaths__WindowsNoEditorDir_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPaths__WindowsNoEditorDir"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryPaths__WindowsNoEditorDir_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventVictoryPaths__WindowsNoEditorDir_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Paths"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("InstallDir/WindowsNoEditor/"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPhysics_UpdateAngularDamping()
	{
		struct VictoryBPFunctionLibrary_eventVictoryPhysics_UpdateAngularDamping_Parms
		{
			UPrimitiveComponent* CompToUpdate;
			float NewAngularDamping;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPhysics_UpdateAngularDamping"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryPhysics_UpdateAngularDamping_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventVictoryPhysics_UpdateAngularDamping_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventVictoryPhysics_UpdateAngularDamping_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventVictoryPhysics_UpdateAngularDamping_Parms), sizeof(bool), true);
			UProperty* NewProp_NewAngularDamping = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewAngularDamping"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NewAngularDamping, VictoryBPFunctionLibrary_eventVictoryPhysics_UpdateAngularDamping_Parms), 0x0010000000000080);
			UProperty* NewProp_CompToUpdate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CompToUpdate"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CompToUpdate, VictoryBPFunctionLibrary_eventVictoryPhysics_UpdateAngularDamping_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Physics"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Update the Angular Damping during runtime! Make sure the component is simulating physics before calling this! Returns false if the new value could not be set."));
			MetaData->SetValue(NewProp_CompToUpdate, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryReBindActionKey()
	{
		struct VictoryBPFunctionLibrary_eventVictoryReBindActionKey_Parms
		{
			FVictoryInput Original;
			FVictoryInput NewBinding;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryReBindActionKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryReBindActionKey_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventVictoryReBindActionKey_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventVictoryReBindActionKey_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventVictoryReBindActionKey_Parms), sizeof(bool), true);
			UProperty* NewProp_NewBinding = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewBinding"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(NewBinding, VictoryBPFunctionLibrary_eventVictoryReBindActionKey_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVictoryInput());
			UProperty* NewProp_Original = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Original"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Original, VictoryBPFunctionLibrary_eventVictoryReBindActionKey_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVictoryInput());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("You can leave the AsString field blank :) Returns false if the key could not be found as an existing mapping!  Enjoy! <3  Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryReBindAxisKey()
	{
		struct VictoryBPFunctionLibrary_eventVictoryReBindAxisKey_Parms
		{
			FVictoryInputAxis Original;
			FVictoryInputAxis NewBinding;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryReBindAxisKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryReBindAxisKey_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventVictoryReBindAxisKey_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventVictoryReBindAxisKey_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventVictoryReBindAxisKey_Parms), sizeof(bool), true);
			UProperty* NewProp_NewBinding = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewBinding"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(NewBinding, VictoryBPFunctionLibrary_eventVictoryReBindAxisKey_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVictoryInputAxis());
			UProperty* NewProp_Original = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Original"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Original, VictoryBPFunctionLibrary_eventVictoryReBindAxisKey_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVictoryInputAxis());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("You can leave the AsString field blank :) Returns false if the key could not be found as an existing mapping!  Enjoy! <3  Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryRemoveActionKeyBind()
	{
		struct VictoryBPFunctionLibrary_eventVictoryRemoveActionKeyBind_Parms
		{
			FVictoryInput ToRemove;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryRemoveActionKeyBind"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryRemoveActionKeyBind_Parms));
			UProperty* NewProp_ToRemove = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ToRemove"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ToRemove, VictoryBPFunctionLibrary_eventVictoryRemoveActionKeyBind_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVictoryInput());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryRemoveAxisKeyBind()
	{
		struct VictoryBPFunctionLibrary_eventVictoryRemoveAxisKeyBind_Parms
		{
			FVictoryInputAxis ToRemove;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryRemoveAxisKeyBind"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictoryRemoveAxisKeyBind_Parms));
			UProperty* NewProp_ToRemove = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ToRemove"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ToRemove, VictoryBPFunctionLibrary_eventVictoryRemoveAxisKeyBind_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVictoryInputAxis());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Key Rebinding"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Bool()
	{
		struct VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Bool_Parms
		{
			FString SectionName;
			FString VariableName;
			bool Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySetCustomConfigVar_Bool"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Bool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Value, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Bool_Parms, bool);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Value, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Bool_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Value, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Bool_Parms), sizeof(bool), true);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Bool_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Bool_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Color()
	{
		struct VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Color_Parms
		{
			FString SectionName;
			FString VariableName;
			FLinearColor Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySetCustomConfigVar_Color"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Color_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Color_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Color_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Color_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Float()
	{
		struct VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Float_Parms
		{
			FString SectionName;
			FString VariableName;
			float Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySetCustomConfigVar_Float"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Float_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Float_Parms), 0x0010000000000080);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Float_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Float_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Int()
	{
		struct VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Int_Parms
		{
			FString SectionName;
			FString VariableName;
			int32 Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySetCustomConfigVar_Int"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Int_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Value, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Int_Parms), 0x0010000000000080);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Int_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Int_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Rotator()
	{
		struct VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Rotator_Parms
		{
			FString SectionName;
			FString VariableName;
			FRotator Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySetCustomConfigVar_Rotator"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Rotator_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Rotator_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Rotator_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Rotator_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_String()
	{
		struct VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_String_Parms
		{
			FString SectionName;
			FString VariableName;
			FString Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySetCustomConfigVar_String"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_String_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Value, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_String_Parms), 0x0010000000000080);
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_String_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_String_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Vector()
	{
		struct VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Vector_Parms
		{
			FString SectionName;
			FString VariableName;
			FVector Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySetCustomConfigVar_Vector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Vector_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Vector_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Vector_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Vector_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Vector2D()
	{
		struct VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Vector2D_Parms
		{
			FString SectionName;
			FString VariableName;
			FVector2D Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySetCustomConfigVar_Vector2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Vector2D_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Vector2D_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_VariableName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VariableName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VariableName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Vector2D_Parms), 0x0010000000000080);
			UProperty* NewProp_SectionName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SectionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SectionName, VictoryBPFunctionLibrary_eventVictorySetCustomConfigVar_Vector2D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Custom Config Vars!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set Custom Config Var! These are stored in Saved/Config/Windows/Game.ini"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySimulateKeyPress()
	{
		struct VictoryBPFunctionLibrary_eventVictorySimulateKeyPress_Parms
		{
			APlayerController* ThePC;
			FKey Key;
			TEnumAsByte<EInputEvent> EventType;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySimulateKeyPress"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySimulateKeyPress_Parms));
			UProperty* NewProp_EventType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(EventType, VictoryBPFunctionLibrary_eventVictorySimulateKeyPress_Parms), 0x0010000000000080, Z_Construct_UEnum_Engine_EInputEvent());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Key, VictoryBPFunctionLibrary_eventVictorySimulateKeyPress_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FKey());
			UProperty* NewProp_ThePC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ThePC"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ThePC, VictoryBPFunctionLibrary_eventVictorySimulateKeyPress_Parms), 0x0010000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySimulateMouseWheel()
	{
		struct VictoryBPFunctionLibrary_eventVictorySimulateMouseWheel_Parms
		{
			float Delta;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySimulateMouseWheel"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySimulateMouseWheel_Parms));
			UProperty* NewProp_Delta = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Delta"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Delta, VictoryBPFunctionLibrary_eventVictorySimulateMouseWheel_Parms), 0x0010000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(NewProp_Delta, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySortFloatArray()
	{
		struct VictoryBPFunctionLibrary_eventVictorySortFloatArray_Parms
		{
			TArray<float> FloatArray;
			TArray<float> FloatArrayRef;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySortFloatArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySortFloatArray_Parms));
			UProperty* NewProp_FloatArrayRef = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FloatArrayRef"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(FloatArrayRef, VictoryBPFunctionLibrary_eventVictorySortFloatArray_Parms), 0x0010000000000180);
			UProperty* NewProp_FloatArrayRef_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FloatArrayRef, TEXT("FloatArrayRef"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_FloatArray = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FloatArray"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(FloatArray, VictoryBPFunctionLibrary_eventVictorySortFloatArray_Parms), 0x0010000008000180);
			UProperty* NewProp_FloatArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FloatArray, TEXT("FloatArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Array"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("sort float array"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sort a float array, smallest value will be at index 0 after sorting. Modifies the input array, no new data created."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySortIntArray()
	{
		struct VictoryBPFunctionLibrary_eventVictorySortIntArray_Parms
		{
			TArray<int32> IntArray;
			TArray<int32> IntArrayRef;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySortIntArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySortIntArray_Parms));
			UProperty* NewProp_IntArrayRef = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IntArrayRef"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(IntArrayRef, VictoryBPFunctionLibrary_eventVictorySortIntArray_Parms), 0x0010000000000180);
			UProperty* NewProp_IntArrayRef_Inner = new(EC_InternalUseOnlyConstructor, NewProp_IntArrayRef, TEXT("IntArrayRef"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_IntArray = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IntArray"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(IntArray, VictoryBPFunctionLibrary_eventVictorySortIntArray_Parms), 0x0010000008000180);
			UProperty* NewProp_IntArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_IntArray, TEXT("IntArray"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Array"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("sort integer array"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sort an integer array, smallest value will be at index 0 after sorting. Modifies the input array, no new data created. <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySoundVolumeChange()
	{
		struct VictoryBPFunctionLibrary_eventVictorySoundVolumeChange_Parms
		{
			USoundClass* SoundClassObject;
			float NewVolume;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySoundVolumeChange"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventVictorySoundVolumeChange_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventVictorySoundVolumeChange_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventVictorySoundVolumeChange_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventVictorySoundVolumeChange_Parms), sizeof(bool), true);
			UProperty* NewProp_NewVolume = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewVolume"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NewVolume, VictoryBPFunctionLibrary_eventVictorySoundVolumeChange_Parms), 0x0010000000000080);
			UProperty* NewProp_SoundClassObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SoundClassObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(SoundClassObject, VictoryBPFunctionLibrary_eventVictorySoundVolumeChange_Parms), 0x0010000000000080, Z_Construct_UClass_USoundClass_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|Sound"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Change volume of Sound class of your choosing, sets the volume instantly! Returns false if the sound class was not found and volume was not set."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__EnableWorldRendering()
	{
		struct VictoryBPFunctionLibrary_eventViewport__EnableWorldRendering_Parms
		{
			const APlayerController* ThePC;
			bool RenderTheWorld;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Viewport__EnableWorldRendering"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPFunctionLibrary_eventViewport__EnableWorldRendering_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventViewport__EnableWorldRendering_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventViewport__EnableWorldRendering_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventViewport__EnableWorldRendering_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(RenderTheWorld, VictoryBPFunctionLibrary_eventViewport__EnableWorldRendering_Parms, bool);
			UProperty* NewProp_RenderTheWorld = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RenderTheWorld"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(RenderTheWorld, VictoryBPFunctionLibrary_eventViewport__EnableWorldRendering_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(RenderTheWorld, VictoryBPFunctionLibrary_eventViewport__EnableWorldRendering_Parms), sizeof(bool), true);
			UProperty* NewProp_ThePC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ThePC"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ThePC, VictoryBPFunctionLibrary_eventViewport__EnableWorldRendering_Parms), 0x0010000000000082, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("disable show hide loading screen"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("This handy node lets you turn the rendering of the entire world on or off! Does not affect UMG or HUD, which allows you to use loading screens effectively! <3 Rama. Returns false if player controller could not be used to get the viewport."));
			MetaData->SetValue(NewProp_ThePC, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__GetCenterOfViewport()
	{
		struct VictoryBPFunctionLibrary_eventViewport__GetCenterOfViewport_Parms
		{
			const APlayerController* ThePC;
			float PosX;
			float PosY;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Viewport__GetCenterOfViewport"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventViewport__GetCenterOfViewport_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventViewport__GetCenterOfViewport_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventViewport__GetCenterOfViewport_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventViewport__GetCenterOfViewport_Parms), sizeof(bool), true);
			UProperty* NewProp_PosY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PosY"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PosY, VictoryBPFunctionLibrary_eventViewport__GetCenterOfViewport_Parms), 0x0010000000000180);
			UProperty* NewProp_PosX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PosX"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PosX, VictoryBPFunctionLibrary_eventViewport__GetCenterOfViewport_Parms), 0x0010000000000180);
			UProperty* NewProp_ThePC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ThePC"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ThePC, VictoryBPFunctionLibrary_eventViewport__GetCenterOfViewport_Parms), 0x0010000000000082, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the coordinates of the center of the player's screen / viewport. Returns false if the operation could not occur"));
			MetaData->SetValue(NewProp_ThePC, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__GetMousePosition()
	{
		struct VictoryBPFunctionLibrary_eventViewport__GetMousePosition_Parms
		{
			const APlayerController* ThePC;
			float PosX;
			float PosY;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Viewport__GetMousePosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(VictoryBPFunctionLibrary_eventViewport__GetMousePosition_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventViewport__GetMousePosition_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventViewport__GetMousePosition_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventViewport__GetMousePosition_Parms), sizeof(bool), true);
			UProperty* NewProp_PosY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PosY"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PosY, VictoryBPFunctionLibrary_eventViewport__GetMousePosition_Parms), 0x0010000000000180);
			UProperty* NewProp_PosX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PosX"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PosX, VictoryBPFunctionLibrary_eventViewport__GetMousePosition_Parms), 0x0010000000000180);
			UProperty* NewProp_ThePC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ThePC"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ThePC, VictoryBPFunctionLibrary_eventViewport__GetMousePosition_Parms), 0x0010000000000082, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the Cursor Position within the Player's Viewport. This will return a result consistent with SET Mouse Position Returns false if the operation could not occur"));
			MetaData->SetValue(NewProp_ThePC, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__SetMousePosition()
	{
		struct VictoryBPFunctionLibrary_eventViewport__SetMousePosition_Parms
		{
			const APlayerController* ThePC;
			float PosX;
			float PosY;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Viewport__SetMousePosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventViewport__SetMousePosition_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventViewport__SetMousePosition_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventViewport__SetMousePosition_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventViewport__SetMousePosition_Parms), sizeof(bool), true);
			UProperty* NewProp_PosY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PosY"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PosY, VictoryBPFunctionLibrary_eventViewport__SetMousePosition_Parms), 0x0010000008000182);
			UProperty* NewProp_PosX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PosX"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PosX, VictoryBPFunctionLibrary_eventViewport__SetMousePosition_Parms), 0x0010000008000182);
			UProperty* NewProp_ThePC = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ThePC"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ThePC, VictoryBPFunctionLibrary_eventViewport__SetMousePosition_Parms), 0x0010000000000082, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("SET the Mouse Position! Returns false if the operation could not occur"));
			MetaData->SetValue(NewProp_PosY, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_PosX, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_ThePC, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Visibility__GetNotRenderedActors()
	{
		struct VictoryBPFunctionLibrary_eventVisibility__GetNotRenderedActors_Parms
		{
			UObject* WorldContextObject;
			TArray<AActor*> CurrentlyNotRenderedActors;
			float MinRecentTime;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Visibility__GetNotRenderedActors"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVisibility__GetNotRenderedActors_Parms));
			UProperty* NewProp_MinRecentTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MinRecentTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MinRecentTime, VictoryBPFunctionLibrary_eventVisibility__GetNotRenderedActors_Parms), 0x0010000000000080);
			UProperty* NewProp_CurrentlyNotRenderedActors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CurrentlyNotRenderedActors"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(CurrentlyNotRenderedActors, VictoryBPFunctionLibrary_eventVisibility__GetNotRenderedActors_Parms), 0x0010000000000180);
			UProperty* NewProp_CurrentlyNotRenderedActors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CurrentlyNotRenderedActors, TEXT("CurrentlyNotRenderedActors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventVisibility__GetNotRenderedActors_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_MinRecentTime"), TEXT("0.010000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Obtain an Array of Actors NOT Rendered Recently! You can specifiy what qualifies as \"Recent\" in seconds."));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Visibility__GetRenderedActors()
	{
		struct VictoryBPFunctionLibrary_eventVisibility__GetRenderedActors_Parms
		{
			UObject* WorldContextObject;
			TArray<AActor*> CurrentlyRenderedActors;
			float MinRecentTime;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Visibility__GetRenderedActors"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(VictoryBPFunctionLibrary_eventVisibility__GetRenderedActors_Parms));
			UProperty* NewProp_MinRecentTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MinRecentTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MinRecentTime, VictoryBPFunctionLibrary_eventVisibility__GetRenderedActors_Parms), 0x0010000000000080);
			UProperty* NewProp_CurrentlyRenderedActors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CurrentlyRenderedActors"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(CurrentlyRenderedActors, VictoryBPFunctionLibrary_eventVisibility__GetRenderedActors_Parms), 0x0010000000000180);
			UProperty* NewProp_CurrentlyRenderedActors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CurrentlyRenderedActors, TEXT("CurrentlyRenderedActors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventVisibility__GetRenderedActors_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_MinRecentTime"), TEXT("0.010000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Obtain an Array of Actors Rendered Recently. You can specifiy what qualifies as \"Recent\" in seconds."));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WidgetGetChildrenOfClass()
	{
		struct VictoryBPFunctionLibrary_eventWidgetGetChildrenOfClass_Parms
		{
			UWidget* ParentWidget;
			TArray<UUserWidget*> ChildWidgets;
			TSubclassOf<UUserWidget>  WidgetClass;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WidgetGetChildrenOfClass"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422409, 65535, sizeof(VictoryBPFunctionLibrary_eventWidgetGetChildrenOfClass_Parms));
			UProperty* NewProp_WidgetClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WidgetClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(WidgetClass, VictoryBPFunctionLibrary_eventWidgetGetChildrenOfClass_Parms), 0x0014000000000080, Z_Construct_UClass_UUserWidget_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_ChildWidgets = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChildWidgets"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ChildWidgets, VictoryBPFunctionLibrary_eventWidgetGetChildrenOfClass_Parms), 0x0010000000000180);
			UProperty* NewProp_ChildWidgets_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChildWidgets, TEXT("ChildWidgets"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UUserWidget_NoRegister());
			UProperty* NewProp_ParentWidget = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ParentWidget"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ParentWidget, VictoryBPFunctionLibrary_eventWidgetGetChildrenOfClass_Parms), 0x0010000000000080, Z_Construct_UClass_UWidget_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|UMG"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("ParentWidget"));
			MetaData->SetValue(ReturnFunction, TEXT("DeterminesOutputType"), TEXT("WidgetClass"));
			MetaData->SetValue(ReturnFunction, TEXT("DynamicOutputParam"), TEXT("ChildWidgets"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WidgetGetParentOfClass()
	{
		struct VictoryBPFunctionLibrary_eventWidgetGetParentOfClass_Parms
		{
			UWidget* ChildWidget;
			TSubclassOf<UUserWidget>  WidgetClass;
			UUserWidget* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WidgetGetParentOfClass"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022409, 65535, sizeof(VictoryBPFunctionLibrary_eventWidgetGetParentOfClass_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryBPFunctionLibrary_eventWidgetGetParentOfClass_Parms), 0x0010000000000580, Z_Construct_UClass_UUserWidget_NoRegister());
			UProperty* NewProp_WidgetClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WidgetClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(WidgetClass, VictoryBPFunctionLibrary_eventWidgetGetParentOfClass_Parms), 0x0014000000000080, Z_Construct_UClass_UUserWidget_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_ChildWidget = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChildWidget"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ChildWidget, VictoryBPFunctionLibrary_eventWidgetGetParentOfClass_Parms), 0x0010000000000080, Z_Construct_UClass_UWidget_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|UMG"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("ChildWidget"));
			MetaData->SetValue(ReturnFunction, TEXT("DeterminesOutputType"), TEXT("WidgetClass"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Recurses up the list of parents until it finds a widget of WidgetClass.\n@return widget that is Parent of ChildWidget that matches WidgetClass."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WidgetIsChildOf()
	{
		struct VictoryBPFunctionLibrary_eventWidgetIsChildOf_Parms
		{
			UWidget* ChildWidget;
			UWidget* PossibleParent;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WidgetIsChildOf"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022409, 65535, sizeof(VictoryBPFunctionLibrary_eventWidgetIsChildOf_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventWidgetIsChildOf_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventWidgetIsChildOf_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventWidgetIsChildOf_Parms), sizeof(bool), true);
			UProperty* NewProp_PossibleParent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PossibleParent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PossibleParent, VictoryBPFunctionLibrary_eventWidgetIsChildOf_Parms), 0x0010000000000080, Z_Construct_UClass_UWidget_NoRegister());
			UProperty* NewProp_ChildWidget = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChildWidget"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ChildWidget, VictoryBPFunctionLibrary_eventWidgetIsChildOf_Parms), 0x0010000000000080, Z_Construct_UClass_UWidget_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|UMG"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("ChildWidget"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Recurses up the list of parents and returns true if this widget is a descendant of the PossibleParent\n@return true if this widget is a child of the PossibleParent"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WorldType__InEditorWorld()
	{
		struct VictoryBPFunctionLibrary_eventWorldType__InEditorWorld_Parms
		{
			UObject* WorldContextObject;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WorldType__InEditorWorld"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventWorldType__InEditorWorld_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventWorldType__InEditorWorld_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventWorldType__InEditorWorld_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventWorldType__InEditorWorld_Parms), sizeof(bool), true);
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventWorldType__InEditorWorld_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Is this game logic running in the Editor world?"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WorldType__InGameInstanceWorld()
	{
		struct VictoryBPFunctionLibrary_eventWorldType__InGameInstanceWorld_Parms
		{
			UObject* WorldContextObject;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WorldType__InGameInstanceWorld"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventWorldType__InGameInstanceWorld_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventWorldType__InGameInstanceWorld_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventWorldType__InGameInstanceWorld_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventWorldType__InGameInstanceWorld_Parms), sizeof(bool), true);
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventWorldType__InGameInstanceWorld_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Is this game logic running in an actual independent game instance?"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WorldType__InPIEWorld()
	{
		struct VictoryBPFunctionLibrary_eventWorldType__InPIEWorld_Parms
		{
			UObject* WorldContextObject;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WorldType__InPIEWorld"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPFunctionLibrary_eventWorldType__InPIEWorld_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPFunctionLibrary_eventWorldType__InPIEWorld_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPFunctionLibrary_eventWorldType__InPIEWorld_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPFunctionLibrary_eventWorldType__InPIEWorld_Parms), sizeof(bool), true);
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, VictoryBPFunctionLibrary_eventWorldType__InPIEWorld_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Is this game logic running in the PIE world?"));
#endif
		}
		return ReturnFunction;
	}
	DEFINE_VTABLE_PTR_HELPER_CTOR(UVictoryBPFunctionLibrary);
	UFunction* Z_Construct_UFunction_UVictoryBPHTML_IsHTML()
	{
		struct VictoryBPHTML_eventIsHTML_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPHTML();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsHTML"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPHTML_eventIsHTML_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPHTML_eventIsHTML_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPHTML_eventIsHTML_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPHTML_eventIsHTML_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|HTML5"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPHTML.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Is the current OS HTML5? This code will only run in games packaged for HTML5, it will not run in Editor builds :) Use this to customize particle FX for HTML5 vs PC builds! Or for any custom HTML5-specific game logic! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPHTML_VictoryHTML5_SetCursorVisible()
	{
		struct VictoryBPHTML_eventVictoryHTML5_SetCursorVisible_Parms
		{
			bool MakeVisible;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPHTML();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryHTML5_SetCursorVisible"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPHTML_eventVictoryHTML5_SetCursorVisible_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(MakeVisible, VictoryBPHTML_eventVictoryHTML5_SetCursorVisible_Parms, bool);
			UProperty* NewProp_MakeVisible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MakeVisible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(MakeVisible, VictoryBPHTML_eventVictoryHTML5_SetCursorVisible_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(MakeVisible, VictoryBPHTML_eventVictoryHTML5_SetCursorVisible_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|HTML5"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPHTML.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UVictoryBPHTML_NoRegister()
	{
		return UVictoryBPHTML::StaticClass();
	}
	UClass* Z_Construct_UClass_UVictoryBPHTML()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_VictoryBPLibrary();
			OuterClass = UVictoryBPHTML::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryBPHTML_IsHTML());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryBPHTML_VictoryHTML5_SetCursorVisible());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryBPHTML_IsHTML(), "IsHTML"); // 3525360882
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryBPHTML_VictoryHTML5_SetCursorVisible(), "VictoryHTML5_SetCursorVisible"); // 2113248191
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("VictoryBPHTML.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPHTML.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("note about UBlueprintFunctionLibrary\n This class is a base class for any function libraries exposed to blueprints.\n Methods in subclasses are expected to be static, and no methods should be added to the base class."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UVictoryBPHTML(Z_Construct_UClass_UVictoryBPHTML, &UVictoryBPHTML::StaticClass, TEXT("UVictoryBPHTML"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UVictoryBPHTML);
	UScriptStruct* Z_Construct_UScriptStruct_FVictorySubtitleCue()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_VictoryBPLibrary();
		extern uint32 Get_Z_Construct_UScriptStruct_FVictorySubtitleCue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("VictorySubtitleCue"), sizeof(FVictorySubtitleCue), Get_Z_Construct_UScriptStruct_FVictorySubtitleCue_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySubtitleCue"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FVictorySubtitleCue>, EStructFlags(0x00000001));
			UProperty* NewProp_Time = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Time"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Time, FVictorySubtitleCue), 0x0010000000000005);
			UProperty* NewProp_SubtitleText = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubtitleText"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(SubtitleText, FVictorySubtitleCue), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Exposing the UE4 Subtitle system for Solus\n <3 Rama"));
			MetaData->SetValue(NewProp_Time, TEXT("Category"), TEXT("SubtitleCue"));
			MetaData->SetValue(NewProp_Time, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(NewProp_Time, TEXT("ToolTip"), TEXT("The time at which the subtitle is to be displayed, in seconds relative to the beginning of the line."));
			MetaData->SetValue(NewProp_SubtitleText, TEXT("Category"), TEXT("SubtitleCue"));
			MetaData->SetValue(NewProp_SubtitleText, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(NewProp_SubtitleText, TEXT("ToolTip"), TEXT("The text to appear in the subtitle."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FVictorySubtitleCue_CRC() { return 41595051U; }
	UFunction* Z_Construct_UFunction_AVictoryPC_OnVictorySubtitlesQueued()
	{
		UObject* Outer=Z_Construct_UClass_AVictoryPC();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnVictorySubtitlesQueued"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08420800, 65535, sizeof(VictoryPC_eventOnVictorySubtitlesQueued_Parms));
			UProperty* NewProp_CueDuration = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CueDuration"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CueDuration, VictoryPC_eventOnVictorySubtitlesQueued_Parms), 0x0010000000000080);
			UProperty* NewProp_VictorySubtitles = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VictorySubtitles"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(VictorySubtitles, VictoryPC_eventOnVictorySubtitlesQueued_Parms), 0x0010000008000182);
			UProperty* NewProp_VictorySubtitles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VictorySubtitles, TEXT("VictorySubtitles"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVictorySubtitleCue());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory Subtitles"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(NewProp_VictorySubtitles, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AVictoryPC_Subtitles_CPPDelegate()
	{
		struct VictoryPC_eventSubtitles_CPPDelegate_Parms
		{
			TArray<FSubtitleCue> VictorySubtitles;
			float CueDuration;
		};
		UObject* Outer=Z_Construct_UClass_AVictoryPC();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Subtitles_CPPDelegate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00420401, 65535, sizeof(VictoryPC_eventSubtitles_CPPDelegate_Parms));
			UProperty* NewProp_CueDuration = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CueDuration"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CueDuration, VictoryPC_eventSubtitles_CPPDelegate_Parms), 0x0010000000000080);
			UProperty* NewProp_VictorySubtitles = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VictorySubtitles"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(VictorySubtitles, VictoryPC_eventSubtitles_CPPDelegate_Parms), 0x0010000008000182);
			UProperty* NewProp_VictorySubtitles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VictorySubtitles, TEXT("VictorySubtitles"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSubtitleCue());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(NewProp_VictorySubtitles, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_DataReceived()
	{
		UObject* Outer=Z_Construct_UClass_AVictoryPC();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPC_GetMyIP_DataReceived"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(VictoryPC_eventVictoryPC_GetMyIP_DataReceived_Parms));
			UProperty* NewProp_YourIP = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("YourIP"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(YourIP, VictoryPC_eventVictoryPC_GetMyIP_DataReceived_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory PC"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Victory PC ~ GetMyIP ~ Data Received!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Implement this event to receive your IP once the request is processed! This requires that your computer has a live internet connection"));
			MetaData->SetValue(NewProp_YourIP, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_SendRequest()
	{
		struct VictoryPC_eventVictoryPC_GetMyIP_SendRequest_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AVictoryPC();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPC_GetMyIP_SendRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryPC_eventVictoryPC_GetMyIP_SendRequest_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryPC_eventVictoryPC_GetMyIP_SendRequest_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryPC_eventVictoryPC_GetMyIP_SendRequest_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryPC_eventVictoryPC_GetMyIP_SendRequest_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory PC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("This node relies on http://api.ipify.org, so if this node ever stops working, check out http://api.ipify.org.  Returns false if the operation could not occur because HTTP module was not loaded or unable to process request."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPlaySpeechSound()
	{
		struct VictoryPC_eventVictoryPlaySpeechSound_Parms
		{
			USoundBase* Sound;
			float VolumeMultiplier;
			float PitchMultiplier;
			float StartTime;
			UAudioComponent* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AVictoryPC();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPlaySpeechSound"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020409, 65535, sizeof(VictoryPC_eventVictoryPlaySpeechSound_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryPC_eventVictoryPlaySpeechSound_Parms), 0x0010000000080588, Z_Construct_UClass_UAudioComponent_NoRegister());
			UProperty* NewProp_StartTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StartTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StartTime, VictoryPC_eventVictoryPlaySpeechSound_Parms), 0x0010000000000080);
			UProperty* NewProp_PitchMultiplier = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PitchMultiplier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PitchMultiplier, VictoryPC_eventVictoryPlaySpeechSound_Parms), 0x0010000000000080);
			UProperty* NewProp_VolumeMultiplier = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VolumeMultiplier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(VolumeMultiplier, VictoryPC_eventVictoryPlaySpeechSound_Parms), 0x0010000000000080);
			UProperty* NewProp_Sound = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Sound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Sound, VictoryPC_eventVictoryPlaySpeechSound_Parms), 0x0010000000000080, Z_Construct_UClass_USoundBase_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory Subtitles"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_PitchMultiplier"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_StartTime"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_VolumeMultiplier"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("play"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("When the sound is played OnVictorySubtitlesQueued will be called with the subtitles!\nYou can bind an event off of the audio component for OnAudioFinished to know hwen the sound is done!"));
			MetaData->SetValue(ReturnFunction, TEXT("UnsafeDuringActorConstruction"), TEXT("true"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AVictoryPC_NoRegister()
	{
		return AVictoryPC::StaticClass();
	}
	UClass* Z_Construct_UClass_AVictoryPC()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage__Script_VictoryBPLibrary();
			OuterClass = AVictoryPC::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900284;

				OuterClass->LinkChild(Z_Construct_UFunction_AVictoryPC_OnVictorySubtitlesQueued());
				OuterClass->LinkChild(Z_Construct_UFunction_AVictoryPC_Subtitles_CPPDelegate());
				OuterClass->LinkChild(Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_DataReceived());
				OuterClass->LinkChild(Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_SendRequest());
				OuterClass->LinkChild(Z_Construct_UFunction_AVictoryPC_VictoryPlaySpeechSound());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AVictoryPC_OnVictorySubtitlesQueued(), "OnVictorySubtitlesQueued"); // 1650022130
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AVictoryPC_Subtitles_CPPDelegate(), "Subtitles_CPPDelegate"); // 3950642773
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_DataReceived(), "VictoryPC_GetMyIP_DataReceived"); // 1778906253
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_SendRequest(), "VictoryPC_GetMyIP_SendRequest"); // 1549296878
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AVictoryPC_VictoryPlaySpeechSound(), "VictoryPlaySpeechSound"); // 3981815607
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("VictoryPC.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AVictoryPC(Z_Construct_UClass_AVictoryPC, &AVictoryPC::StaticClass, TEXT("AVictoryPC"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AVictoryPC);
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__AddPair()
	{
		struct VictoryTMapComp_eventInt_Float__AddPair_Parms
		{
			int32 Key;
			float Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Float__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventInt_Float__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventInt_Float__AddPair_Parms), 0x0010000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Float__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Float__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Get()
	{
		struct VictoryTMapComp_eventInt_Float__Get_Parms
		{
			int32 Key;
			bool IsValid;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Float__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14420401, 65535, sizeof(VictoryTMapComp_eventInt_Float__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventInt_Float__Get_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventInt_Float__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventInt_Float__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventInt_Float__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Float__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Remove()
	{
		struct VictoryTMapComp_eventInt_Float__Remove_Parms
		{
			int32 Key;
			float Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Float__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventInt_Float__Remove_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventInt_Float__Remove_Parms), 0x0010000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Float__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__AddPair()
	{
		struct VictoryTMapComp_eventInt_Vector__AddPair_Parms
		{
			int32 Key;
			FVector Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Vector__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(VictoryTMapComp_eventInt_Vector__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventInt_Vector__AddPair_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Vector__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Vector__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Get()
	{
		struct VictoryTMapComp_eventInt_Vector__Get_Parms
		{
			int32 Key;
			bool IsValid;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Vector__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C20401, 65535, sizeof(VictoryTMapComp_eventInt_Vector__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventInt_Vector__Get_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventInt_Vector__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventInt_Vector__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventInt_Vector__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Vector__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Remove()
	{
		struct VictoryTMapComp_eventInt_Vector__Remove_Parms
		{
			int32 Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Vector__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventInt_Vector__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Vector__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__AddPair()
	{
		struct VictoryTMapComp_eventString_Actor__AddPair_Parms
		{
			FString Key;
			AActor* Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Actor__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Actor__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventString_Actor__AddPair_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Actor__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Actor__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Get()
	{
		struct VictoryTMapComp_eventString_Actor__Get_Parms
		{
			FString Key;
			bool IsValid;
			AActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Actor__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14420401, 65535, sizeof(VictoryTMapComp_eventString_Actor__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventString_Actor__Get_Parms), 0x0010000000000580, Z_Construct_UClass_AActor_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventString_Actor__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventString_Actor__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventString_Actor__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Actor__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Remove()
	{
		struct VictoryTMapComp_eventString_Actor__Remove_Parms
		{
			FString Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Actor__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Actor__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Actor__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__AddPair()
	{
		struct VictoryTMapComp_eventString_Int__AddPair_Parms
		{
			FString Key;
			int32 Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Int__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Int__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventString_Int__AddPair_Parms), 0x0010000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Int__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Int__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Get()
	{
		struct VictoryTMapComp_eventString_Int__Get_Parms
		{
			FString Key;
			bool IsValid;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Int__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14420401, 65535, sizeof(VictoryTMapComp_eventString_Int__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventString_Int__Get_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventString_Int__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventString_Int__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventString_Int__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Int__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Remove()
	{
		struct VictoryTMapComp_eventString_Int__Remove_Parms
		{
			FString Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Int__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Int__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Int__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__AddPair()
	{
		struct VictoryTMapComp_eventString_Rotator__AddPair_Parms
		{
			FString Key;
			FRotator Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Rotator__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(VictoryTMapComp_eventString_Rotator__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventString_Rotator__AddPair_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Rotator__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Rotator__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Get()
	{
		struct VictoryTMapComp_eventString_Rotator__Get_Parms
		{
			FString Key;
			bool IsValid;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Rotator__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C20401, 65535, sizeof(VictoryTMapComp_eventString_Rotator__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventString_Rotator__Get_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventString_Rotator__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventString_Rotator__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventString_Rotator__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Rotator__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Remove()
	{
		struct VictoryTMapComp_eventString_Rotator__Remove_Parms
		{
			FString Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Rotator__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Rotator__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Rotator__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__AddPair()
	{
		struct VictoryTMapComp_eventString_String__AddPair_Parms
		{
			FString Key;
			FString Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_String__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_String__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventString_String__AddPair_Parms), 0x0010000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_String__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_String__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Get()
	{
		struct VictoryTMapComp_eventString_String__Get_Parms
		{
			FString Key;
			bool IsValid;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_String__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14420401, 65535, sizeof(VictoryTMapComp_eventString_String__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventString_String__Get_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventString_String__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventString_String__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventString_String__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_String__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Remove()
	{
		struct VictoryTMapComp_eventString_String__Remove_Parms
		{
			FString Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_String__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_String__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_String__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__AddPair()
	{
		struct VictoryTMapComp_eventString_Vector__AddPair_Parms
		{
			FString Key;
			FVector Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Vector__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(VictoryTMapComp_eventString_Vector__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventString_Vector__AddPair_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Vector__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Vector__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Get()
	{
		struct VictoryTMapComp_eventString_Vector__Get_Parms
		{
			FString Key;
			bool IsValid;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Vector__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C20401, 65535, sizeof(VictoryTMapComp_eventString_Vector__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventString_Vector__Get_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventString_Vector__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventString_Vector__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventString_Vector__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Vector__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Remove()
	{
		struct VictoryTMapComp_eventString_Vector__Remove_Parms
		{
			FString Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Vector__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Vector__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Vector__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("VictoryBPLibrary|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UVictoryTMapComp_NoRegister()
	{
		return UVictoryTMapComp::StaticClass();
	}
	UClass* Z_Construct_UClass_UVictoryTMapComp()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_VictoryBPLibrary();
			OuterClass = UVictoryTMapComp::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Int__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_String__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_String__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_String__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_String__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Remove());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__AddPair(), "Int_Float__AddPair"); // 2404377545
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Clear(), "Int_Float__Clear"); // 647454200
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Get(), "Int_Float__Get"); // 2194960376
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Remove(), "Int_Float__Remove"); // 3630795339
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__AddPair(), "Int_Vector__AddPair"); // 4183743952
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Clear(), "Int_Vector__Clear"); // 4053215758
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Get(), "Int_Vector__Get"); // 611203060
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Remove(), "Int_Vector__Remove"); // 4117145833
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__AddPair(), "String_Actor__AddPair"); // 4192591142
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Clear(), "String_Actor__Clear"); // 3258669962
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Get(), "String_Actor__Get"); // 3817165241
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Remove(), "String_Actor__Remove"); // 2542894437
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Int__AddPair(), "String_Int__AddPair"); // 1515479333
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Clear(), "String_Int__Clear"); // 2789883864
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Get(), "String_Int__Get"); // 2080600776
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Remove(), "String_Int__Remove"); // 333540565
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__AddPair(), "String_Rotator__AddPair"); // 2141032539
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Clear(), "String_Rotator__Clear"); // 2591084683
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Get(), "String_Rotator__Get"); // 657166421
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Remove(), "String_Rotator__Remove"); // 1366447684
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_String__AddPair(), "String_String__AddPair"); // 2855443038
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_String__Clear(), "String_String__Clear"); // 2158989253
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_String__Get(), "String_String__Get"); // 1182335888
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_String__Remove(), "String_String__Remove"); // 2896460136
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__AddPair(), "String_Vector__AddPair"); // 1373578619
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Clear(), "String_Vector__Clear"); // 3823291662
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Get(), "String_Vector__Get"); // 3232653712
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Remove(), "String_Vector__Remove"); // 4253516747
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("VictoryBPLibrary"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("VictoryTMapComp.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UVictoryTMapComp(Z_Construct_UClass_UVictoryTMapComp, &UVictoryTMapComp::StaticClass, TEXT("UVictoryTMapComp"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UVictoryTMapComp);
	UPackage* Z_Construct_UPackage__Script_VictoryBPLibrary()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/VictoryBPLibrary")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x48A84260;
			Guid.B = 0x685A3816;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
